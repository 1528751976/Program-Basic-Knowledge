{"compress":true,"commitItems":[["f3361a11-a3d1-4e34-9744-7e627b0eda70",1553682306724,"# Lorem ipsum\n\nInterdum et malesuada fames ac ante ipsum primis in faucibus. Morbi sagittis aliquam orci, id elementum leo varius at. Suspendisse in hendrerit orci. Aliquam nec congue augue.\n\n* [x] In volutpat scelerisque congue.\n* [ ] Nam ultricies justo dictum ligula pulvinar iaculis.\n* [ ] Etiam vulputate nulla eget lectus fermentum accumsan.\n* [ ] Sed in sem tincidunt, sollicitudin erat pharetra, bibendum sapien.",[[1553682268590,["zyx@DESKTOP-60KJ218",[[1,233,"x"]],[233,233],[234,234]]],[1553682271014,["zyx@DESKTOP-60KJ218",[[-1,234," "]],[235,235],[234,234]]],[1553682281688,["zyx@DESKTOP-60KJ218",[[-1,2,"Lorem ipsum"],[1,13,"J"]],[2,13],[3,3]]],[1553682285221,["zyx@DESKTOP-60KJ218",[[1,3,"avaSEbu"]],[3,3],[10,10]]],[1553682286007,["zyx@DESKTOP-60KJ218",[[-1,8,"bu"]],[10,10],[8,8]]],[1553682288004,["zyx@DESKTOP-60KJ218",[[1,8,"知识"]],[8,8],[10,10]]],[1553682290893,["zyx@DESKTOP-60KJ218",[[-1,8,"知识"]],[10,10],[8,8]]],[1553682293534,["zyx@DESKTOP-60KJ218",[[1,8,"篇"]],[8,8],[9,9]]],[1553682300692,["zyx@DESKTOP-60KJ218",[[-1,11,"Interdum et malesuada fames ac ante ipsum primis in faucibus. Morbi sagittis aliquam orci, id elementum leo varius at. Suspendisse in hendrerit orci. Aliquam nec congue augue."],[1,186,"我相信"]],[11,11],[14,14]]],[1553682304304,["zyx@DESKTOP-60KJ218",[[1,14,"很多人都是是"]],[14,14],[20,20]]],[1553682305526,["zyx@DESKTOP-60KJ218",[[-1,17,"都是是"]],[20,20],[17,17]]],[1553682312783,["zyx@DESKTOP-60KJ218",[[1,17,"在看到这篇文档时"]],[17,17],[25,25]]],[1553682815713,["zyx@DESKTOP-60KJ218",[[1,64," * [x] Nam ultricies justo dictum ligula pulvinar iaculis. * [ ] Etiam vulputate nulla eget lectus fermentum accumsan. * [ ] Sed in sem tincidunt, sollicitudin erat pharetra, bibendum sapien.* [x] In volutpat scelerisque congue."]],[27,255],[255,255]]],[1553682818682,["zyx@DESKTOP-60KJ218",[[-1,11,"我相信很多人在看到这篇文档时"],[-1,26,"\n* [x] In volutpat scelerisque congue. * [x] Nam ultricies justo dictum ligula pulvinar iaculis. * [ ] Etiam vulputate nulla eget lectus fermentum accumsan. * [ ] Sed in sem tincidunt, sollicitudin erat pharetra, bibendum sapien.* [x] In volutpat scelerisque congue.\n* [x] Nam ultricies justo dictum ligula pulvinar iaculis.\n* [ ] Etiam vulputate nulla eget lectus fermentum accumsan.\n* [ ] Sed in sem tincidunt, sollicitudin erat pharetra, bibendum sapien."]],[11,483],[11,11]]],[1553682823111,["zyx@DESKTOP-60KJ218",[[-1,11,"\n"],[1,12,"这里哟很多"]],[11,11],[16,16]]],[1553682823870,["zyx@DESKTOP-60KJ218",[[-1,13,"哟很多"]],[16,16],[13,13]]],[1553682829602,["zyx@DESKTOP-60KJ218",[[1,13,"有很多很多的基础题，"]],[13,13],[23,23]]],[1553682838403,["zyx@DESKTOP-60KJ218",[[1,23,"\n\n"]],[23,23],[24,24]]],[1553682838967,["zyx@DESKTOP-60KJ218",[[1,25,"\n"]],[24,24],[25,25]]],[1553682840140,["zyx@DESKTOP-60KJ218",[[-1,25,"\n"],[1,26,"@"]],[25,25],[26,26]]],[1553682840801,["zyx@DESKTOP-60KJ218",[[-1,25,"@"],[1,26,"\n"]],[26,26],[25,25]]],[1553682841172,["zyx@DESKTOP-60KJ218",[[-1,25,"\n"],[1,26,"#"]],[25,25],[26,26]]],[1553682841790,["zyx@DESKTOP-60KJ218",[[1,26,"# "]],[26,26],[28,28]]],[1553682843956,["zyx@DESKTOP-60KJ218",[[-1,27," "]],[28,28],[27,27]]],[1553682844253,["zyx@DESKTOP-60KJ218",[[1,27,"#"]],[27,27],[28,28]]],[1553682848003,["zyx@DESKTOP-60KJ218",[[1,29,"习题："]],[29,29],[32,32]]],[1553682851130,["zyx@DESKTOP-60KJ218",[[-1,29,"习题："]],[32,32],[29,29]]],[1553682857015,["zyx@DESKTOP-60KJ218",[[1,29,"Q&S"]],[29,29],[32,32]]],[1553682858291,["zyx@DESKTOP-60KJ218",[[1,32,"\n\n"]],[32,32],[33,33]]],[1553682862140,["zyx@DESKTOP-60KJ218",[[-1,22,"，"]],[23,23],[22,22]]],[1553682872464,["zyx@DESKTOP-60KJ218",[[1,18,"常考"]],[18,18],[20,20]]],[1553682875326,["zyx@DESKTOP-60KJ218",[[-1,34,"\n"],[1,35,"1"]],[34,34],[35,35]]],[1553682875697,["zyx@DESKTOP-60KJ218",[[1,35,"."]],[35,35],[36,36]]],[1553682965651,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553682965651,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553682938732,["zyx@DESKTOP-60KJ218",[[1,36,"JDK 和 JRE 有什么区别？\n\nJDK是功能齐全的Java软件开发包。它拥有JRE所拥有的一切，还有编译器（javac）和工具（如javadoc和jdb）。它能够创建和编译程序。JRE 是 Java运行时环境。它是运行已编译 Java 程序所需的所有内容的集合，包括 Java虚拟机（JVM），Java类库，java命令和其他的一些基础构件。但是，它不能用于创建新程序。只是为了运行一下 Java 程序的话，那么只需要安装 JRE 就可以了。如果你需要进行一些 Java 编程方面的工作，那么你就需要安装JDK了。但是，这不是绝对的。有时，即使您不打算在计算机上进行任何Java开发，仍然需要安装JDK。例如，如果要使用JSP部署Web应用程序，那么从技术上讲，您只是在应用程序服务器中运行Java程序。那你为什么需要JDK呢？因为应用程序服务器会将 JSP 转换为 Java servlet，并且需要使用 JDK 来编译 servlet。"]],[36,36],[458,458]]],[1553682942844,["zyx@DESKTOP-60KJ218",[[-1,53,"\n"]],[54,54],[53,53]]],[1553682943935,["zyx@DESKTOP-60KJ218",[[1,53,"\n"]],[53,53],[54,54]]],[1553682944623,["zyx@DESKTOP-60KJ218",[[-1,53,"\n"]],[54,54],[53,53]]],[1553682964431,["zyx@DESKTOP-60KJ218",[[1,72,"JRE 是 Java运行时环境。"]],[72,72],[88,88]]],[1553683025683,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683025683,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553682967216,["zyx@DESKTOP-60KJ218",[[-1,88,"它"]],[89,89],[88,88]]],[1553682968092,["zyx@DESKTOP-60KJ218",[[1,88,"JDK"]],[88,88],[91,91]]],[1553682987796,["zyx@DESKTOP-60KJ218",[[-1,132,"。"]],[133,133],[132,132]]],[1553682988520,["zyx@DESKTOP-60KJ218",[[1,132,"，"]],[132,132],[133,133]]],[1553683001608,["zyx@DESKTOP-60KJ218",[[1,88,"\n"]],[88,88],[89,89]]],[1553683005457,["zyx@DESKTOP-60KJ218",[[1,145,"\n"]],[145,145],[146,146]]],[1553683085654,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683085654,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683055451,["zyx@DESKTOP-60KJ218",[[-1,242,"只是为了运行一下 Java 程序的话，那么只需要安装 JRE 就可以了。如果你需要进行一些 Java 编程方面的工作，那么你就需要安装JDK了。但是，这不是绝对的。有时，即使您不打算在计算机上进行任何Java开发，仍然需要安装JDK。例如，如果要使用JSP部署Web应用程序，那么从技术上讲，您只是在应用程序服务器中运行Java程序。那你为什么需要JDK呢？因为应用程序服务器会将 JSP 转换为 Java servlet，并且需要使用 JDK 来编译 servlet。"]],[242,477],[242,242]]],[1553683145653,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683145653,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683143252,["zyx@DESKTOP-60KJ218",[[-1,158,"时"]],[159,159],[158,158]]],[1553683145567,["zyx@DESKTOP-60KJ218",[[1,156,"程序"]],[156,156],[158,158]]],[1553683205677,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683205677,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683148744,["zyx@DESKTOP-60KJ218",[[-1,164,"是"]],[165,165],[164,164]]],[1553683175888,["zyx@DESKTOP-60KJ218",[[1,164,"是"]],[164,164],[165,165]]],[1553683182442,["zyx@DESKTOP-60KJ218",[[-1,162,"。它"]],[164,164],[162,162]]],[1553683203649,["zyx@DESKTOP-60KJ218",[[-1,160,"环境是运行已编译 Java 程序"]],[176,176],[160,160]]],[1553683266466,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683266466,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683210322,["zyx@DESKTOP-60KJ218",[[-1,163,"所有"]],[165,165],[163,163]]],[1553683222491,["zyx@DESKTOP-60KJ218",[[-1,169,"包括"]],[171,171],[169,169]]],[1553683226887,["zyx@DESKTOP-60KJ218",[[1,169,"它包含了"]],[169,169],[173,173]]],[1553683235728,["zyx@DESKTOP-60KJ218",[[-1,224,"。"]],[225,225],[224,224]]],[1553683241252,["zyx@DESKTOP-60KJ218",[[1,224,"，只运行程序。"]],[224,224],[231,231]]],[1553683241598,["zyx@DESKTOP-60KJ218",[[1,231,"\n\n"]],[231,231],[232,232]]],[1553683243662,["zyx@DESKTOP-60KJ218",[[-1,232,"\n"],[1,233,"2"]],[232,232],[233,233]]],[1553683243945,["zyx@DESKTOP-60KJ218",[[1,233,"."]],[233,233],[234,234]]],[1553683326462,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683326462,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683326218,["zyx@DESKTOP-60KJ218",[[1,234,"基本"]],[234,234],[236,236]]],[1553683386493,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683386493,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683328303,["zyx@DESKTOP-60KJ218",[[1,236,"类型"]],[236,236],[238,238]]],[1553683329264,["zyx@DESKTOP-60KJ218",[[-1,234,"基本类型"]],[238,238],[234,234]]],[1553683338948,["zyx@DESKTOP-60KJ218",[[1,234,"Java的基本类型有哪些？他与"]],[234,234],[249,249]]],[1553683339524,["zyx@DESKTOP-60KJ218",[[-1,247,"他与"]],[249,249],[247,247]]],[1553683348261,["zyx@DESKTOP-60KJ218",[[1,247,"它们渔歌子"]],[247,247],[252,252]]],[1553683349130,["zyx@DESKTOP-60KJ218",[[-1,249,"渔歌子"]],[252,252],[249,249]]],[1553683353215,["zyx@DESKTOP-60KJ218",[[1,249,"各自相对用的"]],[249,249],[255,255]]],[1553683353986,["zyx@DESKTOP-60KJ218",[[-1,251,"相对用的"]],[255,255],[251,251]]],[1553683356783,["zyx@DESKTOP-60KJ218",[[1,251,"相对用的"]],[251,251],[255,255]]],[1553683357470,["zyx@DESKTOP-60KJ218",[[-1,251,"相对用的"]],[255,255],[251,251]]],[1553683384400,["zyx@DESKTOP-60KJ218",[[1,251,"相对应的封装类又是什么？请以Integer和int说明它们"]],[251,251],[280,280]]],[1553683446480,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683446480,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683403236,["zyx@DESKTOP-60KJ218",[[1,280,"之间的区别。"]],[280,280],[286,286]]],[1553683407607,["zyx@DESKTOP-60KJ218",[[-1,264,"以Integer"]],[272,272],[264,264]]],[1553683410553,["zyx@DESKTOP-60KJ218",[[1,264,"说明"]],[264,264],[266,266]]],[1553683413120,["zyx@DESKTOP-60KJ218",[[-1,266,"和"]],[267,267],[266,266]]],[1553683415556,["zyx@DESKTOP-60KJ218",[[-1,269,"说明"]],[271,271],[269,269]]],[1553683416895,["zyx@DESKTOP-60KJ218",[[1,269,"和I"]],[269,269],[271,271]]],[1553683419139,["zyx@DESKTOP-60KJ218",[[-1,270,"I"]],[271,271],[270,270]]],[1553683421751,["zyx@DESKTOP-60KJ218",[[1,271,"的它"]],[270,270],[272,272]]],[1553683425568,["zyx@DESKTOP-60KJ218",[[1,272,"封装类"]],[272,272],[275,275]]],[1553683427530,["zyx@DESKTOP-60KJ218",[[-1,275,"它们"]],[277,277],[275,275]]],[1553683434036,["zyx@DESKTOP-60KJ218",[[1,281,"\n\n"]],[281,281],[282,282]]],[1553683435304,["zyx@DESKTOP-60KJ218",[[-1,282,"\n"],[1,283,"J"]],[282,282],[283,283]]],[1553683439536,["zyx@DESKTOP-60KJ218",[[1,283,"ava的基本类型"]],[283,283],[291,291]]],[1553683441159,["zyx@DESKTOP-60KJ218",[[1,232,"\n"]],[231,231],[232,232]]],[1553683506481,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683506481,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683449504,["zyx@DESKTOP-60KJ218",[[1,292,"有8中"]],[292,292],[295,295]]],[1553683450928,["zyx@DESKTOP-60KJ218",[[-1,294,"中"]],[295,295],[294,294]]],[1553683480572,["zyx@DESKTOP-60KJ218",[[1,294,"种：short、byte、int、long、float、double、char"]],[294,294],[333,333]]],[1553683566484,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683566484,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683518985,["zyx@DESKTOP-60KJ218",[[1,296,"\n"]],[296,296],[297,297]]],[1553683522828,["zyx@DESKTOP-60KJ218",[[1,297,"整数型："]],[297,297],[301,301]]],[1553683523057,["zyx@DESKTOP-60KJ218",[[1,301,"\n"]],[301,301],[302,302]]],[1553683528571,["zyx@DESKTOP-60KJ218",[[-1,321,"、"]],[322,322],[321,321]]],[1553683528907,["zyx@DESKTOP-60KJ218",[[1,321,"\n"]],[321,321],[322,322]]],[1553683532876,["zyx@DESKTOP-60KJ218",[[1,322,"浮点型："]],[322,322],[326,326]]],[1553683536051,["zyx@DESKTOP-60KJ218",[[-1,301,"\n"]],[302,302],[301,301]]],[1553683539589,["zyx@DESKTOP-60KJ218",[[-1,337,"、"]],[338,338],[337,337]]],[1553683540040,["zyx@DESKTOP-60KJ218",[[1,337,"\n"]],[337,337],[338,338]]],[1553683543957,["zyx@DESKTOP-60KJ218",[[1,338,"字符型"]],[338,338],[341,341]]],[1553683544321,["zyx@DESKTOP-60KJ218",[[1,324,"；"]],[324,324],[325,325]]],[1553683545035,["zyx@DESKTOP-60KJ218",[[-1,324,"；"]],[325,325],[324,324]]],[1553683546753,["zyx@DESKTOP-60KJ218",[[1,341,"："]],[341,341],[342,342]]],[1553683557623,["zyx@DESKTOP-60KJ218",[[1,346,"\n\n"]],[346,346],[347,347]]],[1553683560336,["zyx@DESKTOP-60KJ218",[[-1,347,"\n"],[1,348,"布尔类型"]],[347,347],[351,351]]],[1553683563881,["zyx@DESKTOP-60KJ218",[[1,351,"：boolean"]],[351,351],[359,359]]],[1553683626493,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683626493,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683583585,["zyx@DESKTOP-60KJ218",[[1,301,"byte、"]],[301,301],[306,306]]],[1553683586567,["zyx@DESKTOP-60KJ218",[[-1,312,"byte、"]],[317,317],[312,312]]],[1553683597481,["zyx@DESKTOP-60KJ218",[[1,320,"（对应位数：8，"]],[320,320],[328,328]]],[1553683597686,["zyx@DESKTOP-60KJ218",[[-1,327,"，"]],[328,328],[327,327]]],[1553683598069,["zyx@DESKTOP-60KJ218",[[1,327,",16，"]],[327,327],[331,331]]],[1553683598609,["zyx@DESKTOP-60KJ218",[[-1,330,"，"]],[331,331],[330,330]]],[1553683599016,["zyx@DESKTOP-60KJ218",[[1,330,",32，"]],[330,330],[334,334]]],[1553683599425,["zyx@DESKTOP-60KJ218",[[-1,333,"，"]],[334,334],[333,333]]],[1553683600673,["zyx@DESKTOP-60KJ218",[[1,333,",64）"]],[333,333],[337,337]]],[1553683686492,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683686492,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683630644,["zyx@DESKTOP-60KJ218",[[1,354,"（对应位数：8,16,32,64）"]],[354,354],[371,371]]],[1553683635190,["zyx@DESKTOP-60KJ218",[[-1,360,"8,"]],[362,362],[360,360]]],[1553683636995,["zyx@DESKTOP-60KJ218",[[-1,360,"16,"]],[363,363],[360,360]]],[1553683647723,["zyx@DESKTOP-60KJ218",[[1,375,"（对应位数：32,64）"]],[375,375],[387,387]]],[1553683650122,["zyx@DESKTOP-60KJ218",[[1,400,"（对应位数：32,64）"]],[400,400],[412,412]]],[1553683652553,["zyx@DESKTOP-60KJ218",[[-1,381,"32,64"]],[386,386],[381,381]]],[1553683654082,["zyx@DESKTOP-60KJ218",[[1,381,"16"]],[381,381],[383,383]]],[1553683661004,["zyx@DESKTOP-60KJ218",[[-1,397,"（对应位数：32,64）"]],[397,409],[397,397]]],[1553683746496,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683746496,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683695594,["zyx@DESKTOP-60KJ218",[[1,397,"\n\n"]],[397,397],[398,398]]],[1553683696653,["zyx@DESKTOP-60KJ218",[[1,399,"\n"]],[398,398],[399,399]]],[1553683698283,["zyx@DESKTOP-60KJ218",[[-1,399,"\n"],[1,400,"对应"]],[399,399],[401,401]]],[1553683702227,["zyx@DESKTOP-60KJ218",[[1,401,"的封装类："]],[401,401],[406,406]]],[1553683702484,["zyx@DESKTOP-60KJ218",[[1,406,"\n\n"]],[406,406],[407,407]]],[1553683731862,["zyx@DESKTOP-60KJ218",[[-1,407,"\n"],[1,408,"整数型"]],[407,407],[410,410]]],[1553683732733,["zyx@DESKTOP-60KJ218",[[1,410,"："]],[410,410],[411,411]]],[1553683735469,["zyx@DESKTOP-60KJ218",[[-1,410,"："]],[411,411],[410,410]]],[1553683743437,["zyx@DESKTOP-60KJ218",[[1,410,"包装类："]],[410,410],[414,414]]],[1553683806492,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683806492,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683770478,["zyx@DESKTOP-60KJ218",[[1,414,"Byte，Short，Integer，Long"]],[414,414],[437,437]]],[1553683771217,["zyx@DESKTOP-60KJ218",[[1,437,"\n\n"]],[437,437],[438,438]]],[1553683775968,["zyx@DESKTOP-60KJ218",[[-1,438,"\n"],[1,439,"浮点型"]],[438,438],[441,441]]],[1553683792187,["zyx@DESKTOP-60KJ218",[[1,441,"包装类：Float，Double"]],[441,441],[457,457]]],[1553683794229,["zyx@DESKTOP-60KJ218",[[1,457,"\n\n"]],[457,457],[458,458]]],[1553683798704,["zyx@DESKTOP-60KJ218",[[-1,458,"\n"],[1,459,"字符型"]],[458,458],[461,461]]],[1553683804587,["zyx@DESKTOP-60KJ218",[[1,461,"包装类："]],[461,461],[465,465]]],[1553683866500,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683866500,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683812253,["zyx@DESKTOP-60KJ218",[[1,465,"Character"]],[465,465],[474,474]]],[1553683815389,["zyx@DESKTOP-60KJ218",[[1,474,"\n\n"]],[474,474],[475,475]]],[1553683820946,["zyx@DESKTOP-60KJ218",[[-1,475,"\n"],[1,476,"布尔类型"]],[475,475],[479,479]]],[1553683828897,["zyx@DESKTOP-60KJ218",[[1,479,"包装类：Boolean"]],[479,479],[490,490]]],[1553683833817,["zyx@DESKTOP-60KJ218",[[1,490,"\n\n"]],[490,490],[491,491]]],[1553683834087,["zyx@DESKTOP-60KJ218",[[1,492,"\n"]],[491,491],[492,492]]],[1553683835232,["zyx@DESKTOP-60KJ218",[[-1,492,"\n"],[1,493,"I"]],[492,492],[493,493]]],[1553683843015,["zyx@DESKTOP-60KJ218",[[1,493,"nteger与int的区别：："]],[493,493],[508,508]]],[1553683843353,["zyx@DESKTOP-60KJ218",[[1,508,"\n\n"]],[508,508],[509,509]]],[1553683844021,["zyx@DESKTOP-60KJ218",[[-1,509,"\n"]],[509,509],[508,508]]],[1553683844188,["zyx@DESKTOP-60KJ218",[[-1,507,"："]],[508,508],[507,507]]],[1553683845099,["zyx@DESKTOP-60KJ218",[[1,508,"\n"]],[507,507],[508,508]]],[1553683926525,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683926525,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683874328,["zyx@DESKTOP-60KJ218",[[1,508,"int 的默认值为0，而 Integer 的默认值为 null，即 Integer 可以区分出 未赋值和值为0的区别，int 则无法表达出未赋值的情况，例如，要想表达出没有参加考试和 考试成绩为0的区别，则只能使用 Integer。"]],[508,508],[624,624]]],[1553683880042,["zyx@DESKTOP-60KJ218",[[-1,599," "]],[600,600],[599,599]]],[1553683884938,["zyx@DESKTOP-60KJ218",[[-1,555," "]],[556,556],[555,555]]],[1553683892391,["zyx@DESKTOP-60KJ218",[[-1,582,"，"]],[583,583],[582,582]]],[1553683892859,["zyx@DESKTOP-60KJ218",[[1,582,"，"]],[582,582],[583,583]]],[1553683893929,["zyx@DESKTOP-60KJ218",[[-1,582,"，"]],[583,583],[582,582]]],[1553683894415,["zyx@DESKTOP-60KJ218",[[1,582,"。"]],[582,582],[583,583]]],[1553683899660,["zyx@DESKTOP-60KJ218",[[1,623,"\n"]],[622,622],[623,623]]],[1553683900495,["zyx@DESKTOP-60KJ218",[[1,624,"\n"]],[623,623],[624,624]]],[1553683902109,["zyx@DESKTOP-60KJ218",[[-1,624,"\n"],[1,625,"3"]],[624,624],[625,625]]],[1553683902327,["zyx@DESKTOP-60KJ218",[[1,625,"."]],[625,625],[626,626]]],[1553683907434,["zyx@DESKTOP-60KJ218",[[-1,625,"."]],[626,626],[625,625]]],[1553683907708,["zyx@DESKTOP-60KJ218",[[-1,624,"3"],[1,625,"\n"]],[625,625],[624,624]]],[1553683908659,["zyx@DESKTOP-60KJ218",[[-1,624,"\n"]],[624,624],[623,623]]],[1553683909822,["zyx@DESKTOP-60KJ218",[[-1,623,"\n"],[1,624,"3"]],[623,623],[624,624]]],[1553683910020,["zyx@DESKTOP-60KJ218",[[1,624,"."]],[624,624],[625,625]]],[1553683912094,["zyx@DESKTOP-60KJ218",[[1,623,"\n"]],[622,622],[623,623]]],[1553683914020,["zyx@DESKTOP-60KJ218",[[-1,623,"\n"]],[624,624],[623,623]]],[1553683915558,["zyx@DESKTOP-60KJ218",[[1,623,"\n"]],[623,623],[624,624]]],[1553683916121,["zyx@DESKTOP-60KJ218",[[-1,623,"\n"]],[624,624],[623,623]]],[1553683919917,["zyx@DESKTOP-60KJ218",[[-1,232,"\n"]],[232,232],[231,231]]],[1553683924624,["zyx@DESKTOP-60KJ218",[[1,232,"q"]],[232,232],[233,233]]],[1553683986503,[null,[[-1,29,"习"],[1,30," "]],[29,29],[31,31]]],[1553683986503,[null,[[1,29,"习"],[-1,29," "]],[31,31],[29,29]]],[1553683926568,["zyx@DESKTOP-60KJ218",[[-1,232,"q"]],[233,233],[232,232]]],[1553683927275,["zyx@DESKTOP-60KJ218",[[1,232,"Q"]],[232,232],[233,233]]],[1553683929421,["zyx@DESKTOP-60KJ218",[[1,34,"Q"]],[34,34],[35,35]]],[1553683933620,["zyx@DESKTOP-60KJ218",[[1,624,"Q"]],[624,624],[625,625]]],[1553683944307,["zyx@DESKTOP-60KJ218",[[1,624,"\n"]],[624,624],[625,625]]],[1553683956493,["zyx@DESKTOP-60KJ218",[[-1,11,"这里有很多很多常考的基础题"]],[11,24],[11,11]]],[1553683957182,["zyx@DESKTOP-60KJ218",[[-1,12,"\n"]],[11,11],[10,10]]],[1553683959744,["zyx@DESKTOP-60KJ218",[[-1,11,"\n"]],[10,10],[9,9]]],[1553683967372,["zyx@DESKTOP-60KJ218",[[1,19,"**"],[1,38,"**"]],[19,38],[19,42]]],[1553683973826,["zyx@DESKTOP-60KJ218",[[1,222,"**"],[1,272,"**"]],[222,272],[222,276]]],[1553683986412,["zyx@DESKTOP-60KJ218",[[1,486,"++"],[1,501,"++"]],[486,501],[486,505]]],[1553684046522,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553684046522,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553683990214,["zyx@DESKTOP-60KJ218",[[1,393,"++"],[1,400,"++"]],[393,400],[393,404]]],[1553683993112,["zyx@DESKTOP-60KJ218",[[1,277,"++"],[1,290,"++"]],[277,290],[277,294]]],[1553684000540,["zyx@DESKTOP-60KJ218",[[1,494,"_"],[1,513,"_"]],[494,513],[494,515]]],[1553684001816,["zyx@DESKTOP-60KJ218",[[1,494,"++"],[1,515,"++"]],[494,515],[494,519]]],[1553684003653,["zyx@DESKTOP-60KJ218",[[1,496,"++"],[1,517,"++"]],[494,519],[494,523]]],[1553684006160,["zyx@DESKTOP-60KJ218",[[-1,496,"++"],[-1,519,"++"]],[494,523],[494,519]]],[1553684006630,["zyx@DESKTOP-60KJ218",[[-1,494,"++"],[-1,517,"++"]],[494,519],[494,515]]],[1553684007015,["zyx@DESKTOP-60KJ218",[[-1,494,"_"],[-1,514,"_"]],[494,515],[494,513]]],[1553684007398,["zyx@DESKTOP-60KJ218",[[-1,277,"++"],[-1,292,"++"]],[277,294],[277,290]]],[1553684007940,["zyx@DESKTOP-60KJ218",[[-1,393,"++"],[-1,402,"++"]],[393,404],[393,400]]],[1553684008436,["zyx@DESKTOP-60KJ218",[[-1,486,"++"],[-1,503,"++"]],[486,505],[486,501]]],[1553684009911,["zyx@DESKTOP-60KJ218",[[1,486,"_"],[1,501,"_"]],[486,501],[486,503]]],[1553684012363,["zyx@DESKTOP-60KJ218",[[1,393,"_"],[1,400,"_"]],[393,400],[393,402]]],[1553684014327,["zyx@DESKTOP-60KJ218",[[1,277,"_"],[1,290,"_"]],[277,290],[277,292]]],[1553684028980,["zyx@DESKTOP-60KJ218",[[-1,623,"\n"]],[624,624],[623,623]]],[1553684106526,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553684106526,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553684094585,["zyx@DESKTOP-60KJ218",[[1,626,"请说出作用域 public，private，protected，以及不写时的区别"]],[626,626],[666,666]]],[1553684101629,["zyx@DESKTOP-60KJ218",[[-1,660,"不写时"]],[663,663],[660,660]]],[1553684103303,["zyx@DESKTOP-60KJ218",[[1,660,"DEFA"]],[660,660],[664,664]]],[1553684104873,["zyx@DESKTOP-60KJ218",[[-1,660,"DEFA"]],[664,664],[660,660]]],[1553684105439,["zyx@DESKTOP-60KJ218",[[1,660,"d"]],[660,660],[661,661]]],[1553684166553,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553684166553,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553684108184,["zyx@DESKTOP-60KJ218",[[1,661,"efault"]],[661,661],[667,667]]],[1553684112481,["zyx@DESKTOP-60KJ218",[[1,670,"\n\n"]],[670,670],[671,671]]],[1553684143317,["zyx@DESKTOP-60KJ218",[[1,672,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n\n"]],[671,671],[913,913]]],[1553684150696,["zyx@DESKTOP-60KJ218",[[-1,674,"item"]],[678,678],[674,674]]],[1553684152356,["zyx@DESKTOP-60KJ218",[[1,674,"zuoyon"]],[674,674],[680,680]]],[1553684153866,["zyx@DESKTOP-60KJ218",[[-1,674,"zuoyon"]],[680,680],[674,674]]],[1553684158998,["zyx@DESKTOP-60KJ218",[[1,674,"作用域"]],[674,674],[677,677]]],[1553684163551,["zyx@DESKTOP-60KJ218",[[-1,681,"  "]],[683,683],[681,681]]],[1553684166470,["zyx@DESKTOP-60KJ218",[[-1,687,"l"]],[688,688],[687,687]]],[1553684226557,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553684226557,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553684167326,["zyx@DESKTOP-60KJ218",[[-1,683,"Mode"]],[687,687],[683,683]]],[1553684172356,["zyx@DESKTOP-60KJ218",[[1,683,"Model"]],[683,683],[688,688]]],[1553684172663,["zyx@DESKTOP-60KJ218",[[1,681,"  "]],[681,681],[683,683]]],[1553684172944,["zyx@DESKTOP-60KJ218",[[-1,674,"作用域"]],[677,677],[674,674]]],[1553684173199,["zyx@DESKTOP-60KJ218",[[1,674,"zuoyon"]],[674,674],[680,680]]],[1553684173507,["zyx@DESKTOP-60KJ218",[[-1,674,"zuoyon"]],[680,680],[674,674]]],[1553684173895,["zyx@DESKTOP-60KJ218",[[1,674,"item"]],[674,674],[678,678]]],[1553684174245,["zyx@DESKTOP-60KJ218",[[-1,672,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n\n"]],[913,913],[671,671]]],[1553684208825,["zyx@DESKTOP-60KJ218",[[1,672,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n\n"]],[671,671],[913,913]]],[1553684286551,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553684286551,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553684240813,["zyx@DESKTOP-60KJ218",[[1,711,"其他包|"]],[711,711],[715,715]]],[1553684247612,["zyx@DESKTOP-60KJ218",[[1,711," "]],[711,711],[712,712]]],[1553684248344,["zyx@DESKTOP-60KJ218",[[1,715," "]],[715,715],[716,716]]],[1553684251787,["zyx@DESKTOP-60KJ218",[[-1,715," "]],[716,716],[715,715]]],[1553684252937,["zyx@DESKTOP-60KJ218",[[-1,711," 其他包|"]],[712,712],[711,711]]],[1553684255674,["zyx@DESKTOP-60KJ218",[[-1,672,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n\n"]],[913,913],[671,671]]],[1553684276250,["zyx@DESKTOP-60KJ218",[[1,623,"**"],[1,670,"**"]],[623,670],[623,674]]],[1553684346537,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553684346537,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553684341190,["zyx@DESKTOP-60KJ218",[[1,660,"friendly"]],[660,660],[668,668]]],[1553687044456,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553687044456,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553687010352,["zyx@DESKTOP-60KJ218",[[1,683,"一个\".java\"源文件中是否可以包括多个类（不是内部类）？有什么限制？"]],[683,683],[719,719]]],[1553687013048,["zyx@DESKTOP-60KJ218",[[1,683,"钱"]],[683,683],[684,684]]],[1553687014670,["zyx@DESKTOP-60KJ218",[[-1,683,"钱"]],[684,684],[683,683]]],[1553687017507,["zyx@DESKTOP-60KJ218",[[1,683,"Q4."]],[683,683],[686,686]]],[1553687023181,["zyx@DESKTOP-60KJ218",[[1,683,"**"],[1,722,"**"]],[683,722],[683,726]]],[1553687025594,["zyx@DESKTOP-60KJ218",[[1,727,"\n"]],[726,726],[727,727]]],[1553687033944,["zyx@DESKTOP-60KJ218",[[1,683,"\n"]],[682,682],[683,683]]],[1553687584492,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553687584492,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553687528152,["zyx@DESKTOP-60KJ218",[[-1,659,"，friendly"]],[668,668],[659,659]]],[1553687529131,["zyx@DESKTOP-60KJ218",[[1,659,","]],[659,659],[660,660]]],[1553687531140,["zyx@DESKTOP-60KJ218",[[-1,659,","]],[660,660],[659,659]]],[1553687532026,["zyx@DESKTOP-60KJ218",[[1,659,"，"]],[659,659],[660,660]]],[1553687536810,["zyx@DESKTOP-60KJ218",[[1,669,"（）"]],[669,669],[671,671]]],[1553687540337,["zyx@DESKTOP-60KJ218",[[1,670,"通常"]],[670,670],[672,672]]],[1553687541918,["zyx@DESKTOP-60KJ218",[[-1,670,"通常"]],[672,672],[670,670]]],[1553687552397,["zyx@DESKTOP-60KJ218",[[1,670,"流传的面试题"]],[670,670],[676,676]]],[1553687561127,["zyx@DESKTOP-60KJ218",[[-1,669,"（流传的面试题）"]],[676,676],[669,669]]],[1553687581450,["zyx@DESKTOP-60KJ218",[[1,675,"流传的面试题中default经常被写成"]],[675,675],[694,694]]],[1553687644475,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553687644475,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553687608500,["zyx@DESKTOP-60KJ218",[[1,694,"friendly，这两者没有区别，并且Java中没有friendlu"]],[694,694],[728,728]]],[1553687608873,["zyx@DESKTOP-60KJ218",[[-1,727,"u"]],[728,728],[727,727]]],[1553687613109,["zyx@DESKTOP-60KJ218",[[1,727,"y关键字。"]],[727,727],[732,732]]],[1553687613301,["zyx@DESKTOP-60KJ218",[[1,733,"\n"]],[732,732],[733,733]]],[1553687704467,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553687704467,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553687686180,["zyx@DESKTOP-60KJ218",[[-1,711,"并且"]],[713,713],[711,711]]],[1553687688160,["zyx@DESKTOP-60KJ218",[[1,711,"但是"]],[711,711],[713,713]]],[1553687694122,["zyx@DESKTOP-60KJ218",[[1,734,"\n"]],[732,732],[733,733]]],[1553687703894,["zyx@DESKTOP-60KJ218",[[1,733,"public权限："]],[733,733],[742,742]]],[1553687944478,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553687944478,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553687912592,["zyx@DESKTOP-60KJ218",[[1,742,"表明该类的所有成员属性"]],[742,742],[753,753]]],[1553687933161,["zyx@DESKTOP-60KJ218",[[-1,745,"类的所有成员属性"]],[753,753],[745,745]]],[1553687937563,["zyx@DESKTOP-60KJ218",[[1,745,"数据对所有的"]],[745,745],[751,751]]],[1553687939095,["zyx@DESKTOP-60KJ218",[[-1,750,"的"]],[751,751],[750,750]]],[1553687943065,["zyx@DESKTOP-60KJ218",[[1,750,"人开发，所有"]],[750,750],[756,756]]],[1553687944365,["zyx@DESKTOP-60KJ218",[[-1,751,"开发，所有"]],[756,756],[751,751]]],[1553688004486,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688004486,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553687959772,["zyx@DESKTOP-60KJ218",[[1,751,"开放，可以直接调用"]],[751,751],[760,760]]],[1553687963745,["zyx@DESKTOP-60KJ218",[[1,762,"\n"]],[760,760],[761,761]]],[1553687971454,["zyx@DESKTOP-60KJ218",[[1,761,"private："]],[761,761],[769,769]]],[1553687973305,["zyx@DESKTOP-60KJ218",[[-1,739,"权限"]],[741,741],[739,739]]],[1553687999981,["zyx@DESKTOP-60KJ218",[[1,767,"私有，可以理解为自己的私有财产，尽自己可"]],[767,767],[787,787]]],[1553688000857,["zyx@DESKTOP-60KJ218",[[-1,783,"尽自己可"]],[787,787],[783,783]]],[1553688003064,["zyx@DESKTOP-60KJ218",[[1,783,"仅自己"]],[783,783],[786,786]]],[1553688064508,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688064508,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688006378,["zyx@DESKTOP-60KJ218",[[1,786,"可以访问。"]],[786,786],[791,791]]],[1553688008032,["zyx@DESKTOP-60KJ218",[[-1,788,"访问。"]],[791,791],[788,788]]],[1553688010626,["zyx@DESKTOP-60KJ218",[[1,788,"使用。"]],[788,788],[791,791]]],[1553688010761,["zyx@DESKTOP-60KJ218",[[1,793,"\n"]],[791,791],[792,792]]],[1553688016905,["zyx@DESKTOP-60KJ218",[[1,792,"protect："]],[792,792],[800,800]]],[1553688124502,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688124502,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688075855,["zyx@DESKTOP-60KJ218",[[1,799,"ed"]],[799,799],[801,801]]],[1553688093907,["zyx@DESKTOP-60KJ218",[[1,802,"tong"]],[802,802],[806,806]]],[1553688095267,["zyx@DESKTOP-60KJ218",[[-1,802,"tong"]],[806,806],[802,802]]],[1553688097955,["zyx@DESKTOP-60KJ218",[[1,802,"通报"]],[802,802],[804,804]]],[1553688098342,["zyx@DESKTOP-60KJ218",[[-1,802,"通报"]],[804,804],[802,802]]],[1553688102568,["zyx@DESKTOP-60KJ218",[[1,802,"受保护的，"]],[802,802],[807,807]]],[1553688106253,["zyx@DESKTOP-60KJ218",[[1,769,"的"]],[769,769],[770,770]]],[1553688110928,["zyx@DESKTOP-60KJ218",[[1,740,"共有的，"]],[740,740],[744,744]]],[1553688184505,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688184505,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688128848,["zyx@DESKTOP-60KJ218",[[1,812,"有一群人守护者"]],[812,812],[819,819]]],[1553688133423,["zyx@DESKTOP-60KJ218",[[-1,812,"有一群人守护者"]],[819,819],[812,812]]],[1553688141417,["zyx@DESKTOP-60KJ218",[[1,812,"听这个名字就是有一群人"]],[812,812],[823,823]]],[1553688143348,["zyx@DESKTOP-60KJ218",[[-1,812,"听这个名字就是有一群人"]],[823,823],[812,812]]],[1553688182182,["zyx@DESKTOP-60KJ218",[[1,812,"可以理解为有一群人组成一个社团，这个社团里的人可以使用"]],[812,812],[839,839]]],[1553688244514,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688244514,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688193810,["zyx@DESKTOP-60KJ218",[[1,839,"，它的后代也可以使用"]],[839,839],[849,849]]],[1553688200622,["zyx@DESKTOP-60KJ218",[[-1,840,"它的"]],[841,841],[840,840]]],[1553688241969,["zyx@DESKTOP-60KJ218",[[1,847,"。这个社团就相当于一个包，在同一个包中的类便可以访问，子类也可以访问。"]],[847,847],[882,882]]],[1553688242130,["zyx@DESKTOP-60KJ218",[[1,884,"\n"]],[882,882],[883,883]]],[1553688304518,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688304518,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688286454,["zyx@DESKTOP-60KJ218",[[1,883,"default：默认的，在同一个包中的类可以访问，子类"]],[883,883],[910,910]]],[1553688287552,["zyx@DESKTOP-60KJ218",[[-1,908,"子类"]],[910,910],[908,908]]],[1553688303943,["zyx@DESKTOP-60KJ218",[[1,908,"同一个包中的子类也可以访问，但是当子类在其他保重，"]],[908,908],[933,933]]],[1553688364506,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688364506,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688305090,["zyx@DESKTOP-60KJ218",[[1,933,"就"]],[933,933],[934,934]]],[1553688305753,["zyx@DESKTOP-60KJ218",[[-1,930,"保重，就"]],[934,934],[930,930]]],[1553688314278,["zyx@DESKTOP-60KJ218",[[1,930,"包中，就不能访问。"]],[930,930],[939,939]]],[1553688317688,["zyx@DESKTOP-60KJ218",[[1,941,"\n"]],[939,939],[940,940]]],[1553688484516,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688484516,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688451961,["zyx@DESKTOP-60KJ218",[[1,940,"| 访问权限  |"]],[940,940],[949,949]]],[1553688479082,["zyx@DESKTOP-60KJ218",[[1,951,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n"]],[940,949],[1192,1192]]],[1553688483113,["zyx@DESKTOP-60KJ218",[[-1,940,"| 访问权限  |"]],[949,949],[940,940]]],[1553688483476,["zyx@DESKTOP-60KJ218",[[-1,941,"\n"]],[940,940],[939,939]]],[1553688484415,["zyx@DESKTOP-60KJ218",[[-1,940,"\n"]],[940,940],[939,939]]],[1553688544528,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688544528,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688488337,["zyx@DESKTOP-60KJ218",[[-1,942,"item"]],[946,946],[942,942]]],[1553688491770,["zyx@DESKTOP-60KJ218",[[1,942,"访问权限"]],[942,942],[946,946]]],[1553688499030,["zyx@DESKTOP-60KJ218",[[-1,954,"Model"]],[959,959],[954,954]]],[1553688507813,["zyx@DESKTOP-60KJ218",[[1,954,"同包"]],[954,954],[956,956]]],[1553688512633,["zyx@DESKTOP-60KJ218",[[-1,963,"Price"]],[968,968],[963,963]]],[1553688522235,["zyx@DESKTOP-60KJ218",[[-1,954,"同包"]],[956,956],[954,954]]],[1553688524230,["zyx@DESKTOP-60KJ218",[[1,954,"当前类"]],[954,954],[957,957]]],[1553688529459,["zyx@DESKTOP-60KJ218",[[1,963,"同包"]],[963,963],[965,965]]],[1553688532446,["zyx@DESKTOP-60KJ218",[[-1,969,"Qty"]],[972,972],[969,969]]],[1553688537942,["zyx@DESKTOP-60KJ218",[[1,969,"子孙类"]],[969,969],[972,972]]],[1553688540087,["zyx@DESKTOP-60KJ218",[[1,974," "]],[974,974],[975,975]]],[1553688604534,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688604534,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688545100,["zyx@DESKTOP-60KJ218",[[1,975,"其他包"]],[975,975],[978,978]]],[1553688563912,["zyx@DESKTOP-60KJ218",[[1,979,"\n| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n"]],[978,978],[1221,1221]]],[1553688570394,["zyx@DESKTOP-60KJ218",[[-1,1221,"| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |"]],[1221,1420],[1221,1221]]],[1553688570935,["zyx@DESKTOP-60KJ218",[[-1,1222,"\n"]],[1221,1221],[1220,1220]]],[1553688571377,["zyx@DESKTOP-60KJ218",[[-1,1221,"\n"]],[1220,1220],[1219,1219]]],[1553688574710,["zyx@DESKTOP-60KJ218",[[-1,980,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |"]],[980,1219],[980,980]]],[1553688582628,["zyx@DESKTOP-60KJ218",[[1,954,"  "]],[954,954],[956,956]]],[1553688584391,["zyx@DESKTOP-60KJ218",[[1,965,"  "]],[965,965],[967,967]]],[1553688585018,["zyx@DESKTOP-60KJ218",[[1,973," "]],[973,973],[974,974]]],[1553688585744,["zyx@DESKTOP-60KJ218",[[1,978," "]],[978,978],[979,979]]],[1553688587060,["zyx@DESKTOP-60KJ218",[[1,981,"  "]],[981,981],[983,983]]],[1553688588938,["zyx@DESKTOP-60KJ218",[[1,986,"|"]],[986,986],[987,987]]],[1553688590016,["zyx@DESKTOP-60KJ218",[[1,986," "]],[986,986],[987,987]]],[1553688590950,["zyx@DESKTOP-60KJ218",[[1,992,"\n"]],[988,988],[989,989]]],[1553688664517,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688664517,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688611105,["zyx@DESKTOP-60KJ218",[[1,990,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |"]],[989,989],[1231,1231]]],[1553688634732,["zyx@DESKTOP-60KJ218",[[-1,990,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |"]],[990,1229],[990,990]]],[1553688635271,["zyx@DESKTOP-60KJ218",[[-1,992,"\n"]],[990,990],[989,989]]],[1553688635490,["zyx@DESKTOP-60KJ218",[[-1,991,"\n"]],[989,989],[988,988]]],[1553688639276,["zyx@DESKTOP-60KJ218",[[-1,940,"| 访问权限      |   当前类    |   同包  |  子孙类  |   其他包 |"]],[988,988],[940,940]]],[1553688639645,["zyx@DESKTOP-60KJ218",[[-1,942,"\n"]],[940,940],[939,939]]],[1553688642186,["zyx@DESKTOP-60KJ218",[[-1,941,"\n"]],[941,941],[940,940]]],[1553688724517,[null,[[-1,14,"习"],[1,15," "]],[14,14],[16,16]]],[1553688724517,[null,[[1,14,"习"],[-1,14," "]],[16,16],[14,14]]],[1553688667534,["zyx@DESKTOP-60KJ218",[[-1,761,"用"]],[762,762],[761,761]]],[1553688669728,["zyx@DESKTOP-60KJ218",[[1,940,"\n"]],[938,938],[939,939]]],[1553688671655,["zyx@DESKTOP-60KJ218",[[-1,940,"\n"]],[940,940],[939,939]]]],null,"zyx@DESKTOP-60KJ218"],["cbb4a568-bb34-4d63-a13e-b67fcc9525f9",1553688811442,"# JavaSE篇\n\n### Q&S\n**Q1.JDK 和 JRE 有什么区别？**\nJDK是功能齐全的Java软件开发包。JRE 是 Java运行时环境。\nJDK拥有JRE所拥有的一切，还有编译器（javac）和工具（如javadoc和jdb），它能够创建和编译程序。\nJRE 是 Java程序运行所需的内容的集合，它包含了 Java虚拟机（JVM），Java类库，java命令和其他的一些基础构件。但是，它不能用于创建新程序，只运行程序。\n**Q2.Java的基本类型有哪些？它们各自相对应的封装类又是什么？请说明int和它的封装类之间的区别。**\n_Java的基本类型有8种：_\n整数型：byte、short、int、long（对应位数：8,16,32,64）\n浮点型：float、double（对应位数：32,64）\n字符型：char（对应位数：16）\n布尔类型：boolean\n\n_对应的封装类：_\n整数型包装类：Byte，Short，Integer，Long\n浮点型包装类：Float，Double\n字符型包装类：Character\n布尔类型包装类：Boolean\n\n_Integer与int的区别：_\nint 的默认值为0，而 Integer 的默认值为 null，即 Integer 可以区分出未赋值和值为0的区别，int 则无法表达出未赋值的情况。例如，要想表达出没有参加考试和考试成绩为0的区别，则只能使用 Integer。\n**Q3.请说出作用域 public，private，protected，以及default的区别**\n流传的面试题中default经常被写成friendly，这两者没有区别，但是Java中没有friendly关键字。\npublic：共有的，表明该数据对所有人开放，可以直接调\nprivate：私有的，可以理解为自己的私有财产，仅自己可以使用。\nprotected：受保护的，可以理解为有一群人组成一个社团，这个社团里的人可以使用，后代也可以使用。这个社团就相当于一个包，在同一个包中的类便可以访问，子类也可以访问。\ndefault：默认的，在同一个包中的类可以访问，同一个包中的子类也可以访问，但是当子类在其他包中，就不能访问。\n\n**Q4.一个\".java\"源文件中是否可以包括多个类（不是内部类）？有什么限制？**\n\n",[[1553688797433,["zyx@DESKTOP-60KJ218",[[1,939,"![Java权限访问符]($resource/Java%E6%9D%83%E9%99%90%E8%AE%BF%E9%97%AE%E7%AC%A6.png)"]],[939,939],[1017,1017]]],[1553688823319,["zyx@DESKTOP-60KJ218",[[-1,1061,"\n"],[1,1062,"可以"]],[1061,1061],[1063,1063]]],[1553688839198,["zyx@DESKTOP-60KJ218",[[1,1063,"包含多个类，但是只有一个了"]],[1063,1063],[1076,1076]]],[1553688839756,["zyx@DESKTOP-60KJ218",[[-1,1075,"了"]],[1076,1076],[1075,1075]]],[1553688843648,["zyx@DESKTOP-60KJ218",[[1,1075,"类可以使用P"]],[1075,1075],[1081,1081]]],[1553688844350,["zyx@DESKTOP-60KJ218",[[-1,1080,"P"]],[1081,1081],[1080,1080]]],[1553688867875,["zyx@DESKTOP-60KJ218",[[1,1080,"public来修饰，并且文件名称必须与public修饰的类名称形同"]],[1080,1080],[1113,1113]]],[1553688868919,["zyx@DESKTOP-60KJ218",[[-1,1111,"形同"]],[1113,1113],[1111,1111]]],[1553688871432,["zyx@DESKTOP-60KJ218",[[1,1111,"相同。"]],[1111,1111],[1114,1114]]],[1553688894249,["zyx@DESKTOP-60KJ218",[[1,1114,"\n\n"]],[1114,1114],[1115,1115]]],[1553688894904,["zyx@DESKTOP-60KJ218",[[-1,1115,"\n"],[1,1116,"Q"]],[1115,1115],[1116,1116]]],[1553688898316,["zyx@DESKTOP-60KJ218",[[1,1116,"5.switch 语句能否作用在 byte 上，能否作用在 long 上，能否作用在 String 上?"]],[1116,1116],[1168,1168]]],[1553688906508,["zyx@DESKTOP-60KJ218",[[1,1115,"**"],[1,1168,"**"]],[1115,1168],[1115,1172]]],[1553688913373,["zyx@DESKTOP-60KJ218",[[1,1172,"\n\n"]],[1172,1172],[1173,1173]]],[1553688944443,["zyx@DESKTOP-60KJ218",[[1,277,"=="],[1,292,"=="]],[277,292],[277,296]]],[1553688948503,["zyx@DESKTOP-60KJ218",[[-1,277,"=="],[-1,294,"=="]],[277,296],[277,292]]],[1553688958125,["zyx@DESKTOP-60KJ218",[[1,19,"\n"],[-1,1173,"\n"]],[362,362],[0,0]]],[1553688995534,["zyx@DESKTOP-60KJ218",[[1,1174,"\n"]],[1173,1173],[1174,1174]]],[1553689015064,["zyx@DESKTOP-60KJ218",[[-1,1174,"\n"],[1,1175,"switch"]],[1174,1174],[1180,1180]]],[1553689023521,["zyx@DESKTOP-60KJ218",[[1,1180,"表达式中，只能是整形"]],[1180,1180],[1190,1190]]],[1553689024120,["zyx@DESKTOP-60KJ218",[[-1,1188,"整形"]],[1190,1190],[1188,1188]]],[1553689030557,["zyx@DESKTOP-60KJ218",[[1,1188,"整型或者枚举类型"]],[1188,1188],[1196,1196]]],[1553689078835,["zyx@DESKTOP-60KJ218",[[-1,1188,"整型"],[1,1190,"int"]],[1188,1188],[1191,1191]]],[1553689081479,["zyx@DESKTOP-60KJ218",[[1,1191,"类型"]],[1191,1191],[1193,1193]]],[1553689082838,["zyx@DESKTOP-60KJ218",[[1,1195,"或者"]],[1193,1193],[1195,1195]]],[1553689085889,["zyx@DESKTOP-60KJ218",[[1,1195,"Integer"]],[1195,1195],[1202,1202]]]],null,"zyx@DESKTOP-60KJ218"],["63999a73-c913-49b4-a05f-b80fbeda4e10",1553777092887,"# JavaSE篇\n\n### Q&S\n\n**Q1.JDK 和 JRE 有什么区别？**\nJDK是功能齐全的Java软件开发包。JRE 是 Java运行时环境。\nJDK拥有JRE所拥有的一切，还有编译器（javac）和工具（如javadoc和jdb），它能够创建和编译程序。\nJRE 是 Java程序运行所需的内容的集合，它包含了 Java虚拟机（JVM），Java类库，java命令和其他的一些基础构件。但是，它不能用于创建新程序，只运行程序。\n**Q2.Java的基本类型有哪些？它们各自相对应的封装类又是什么？请说明int和它的封装类之间的区别。**\n_Java的基本类型有8种：_\n整数型：byte、short、int、long（对应位数：8,16,32,64）\n浮点型：float、double（对应位数：32,64）\n字符型：char（对应位数：16）\n布尔类型：boolean\n\n_对应的封装类：_\n整数型包装类：Byte，Short，Integer，Long\n浮点型包装类：Float，Double\n字符型包装类：Character\n布尔类型包装类：Boolean\n\n_Integer与int的区别：_\nint 的默认值为0，而 Integer 的默认值为 null，即 Integer 可以区分出未赋值和值为0的区别，int 则无法表达出未赋值的情况。例如，要想表达出没有参加考试和考试成绩为0的区别，则只能使用 Integer。\n**Q3.请说出作用域 public，private，protected，以及default的区别**\n流传的面试题中default经常被写成friendly，这两者没有区别，但是Java中没有friendly关键字。\npublic：共有的，表明该数据对所有人开放，可以直接调\nprivate：私有的，可以理解为自己的私有财产，仅自己可以使用。\nprotected：受保护的，可以理解为有一群人组成一个社团，这个社团里的人可以使用，后代也可以使用。这个社团就相当于一个包，在同一个包中的类便可以访问，子类也可以访问。\ndefault：默认的，在同一个包中的类可以访问，同一个包中的子类也可以访问，但是当子类在其他包中，就不能访问。\n![Java权限访问符]($resource/Java%E6%9D%83%E9%99%90%E8%AE%BF%E9%97%AE%E7%AC%A6.png)\n**Q4.一个\".java\"源文件中是否可以包括多个类（不是内部类）？有什么限制？**\n可以包含多个类，但是只有一个类可以使用public来修饰，并且文件名称必须与public修饰的类名称相同。\n**Q5.switch 语句能否作用在 byte 上，能否作用在 long 上，能否作用在 String 上?**\nswitch表达式中，只能是int类型或者Integer或者枚举类型",[[1553777089278,["zyx@DESKTOP-60KJ218",[[1,1208,"。"]],[1208,1208],[1209,1209]]],[1553777104970,["zyx@DESKTOP-60KJ218",[[1,1209,"byte、shotr"]],[1209,1209],[1219,1219]]],[1553777106151,["zyx@DESKTOP-60KJ218",[[-1,1217,"tr"]],[1219,1219],[1217,1217]]],[1553777108391,["zyx@DESKTOP-60KJ218",[[1,1217,"rt、"]],[1217,1217],[1220,1220]]],[1553777128555,["zyx@DESKTOP-60KJ218",[[1,405,"****"]],[405,405],[407,407]]],[1553777129876,["zyx@DESKTOP-60KJ218",[[-1,405,"****"]],[407,407],[405,405]]],[1553777150611,["zyx@DESKTOP-60KJ218",[[1,1220,"char可以穿"]],[1220,1220],[1227,1227]]],[1553777151014,["zyx@DESKTOP-60KJ218",[[-1,1225,"以穿"]],[1227,1227],[1225,1225]]],[1553777151751,["zyx@DESKTOP-60KJ218",[[1,1225,"转"]],[1225,1225],[1226,1226]]],[1553777152158,["zyx@DESKTOP-60KJ218",[[-1,1224,"可转"]],[1226,1226],[1224,1224]]],[1553777158923,["zyx@DESKTOP-60KJ218",[[1,1224,"可以转换成"]],[1224,1224],[1229,1229]]],[1553777160894,["zyx@DESKTOP-60KJ218",[[-1,1226,"转换成"]],[1229,1229],[1226,1226]]],[1553777173002,["zyx@DESKTOP-60KJ218",[[1,1226,"隐式转换成int类型，英雌"]],[1226,1226],[1239,1239]]],[1553777174045,["zyx@DESKTOP-60KJ218",[[-1,1237,"英雌"]],[1239,1239],[1237,1237]]],[1553777193281,["zyx@DESKTOP-60KJ218",[[1,1237,"因此可以使用这三种类型的表达式，而"]],[1237,1237],[1254,1254]]],[1553777199270,["zyx@DESKTOP-60KJ218",[[-1,1253,"而"]],[1254,1254],[1253,1253]]],[1553777208316,["zyx@DESKTOP-60KJ218",[[1,1253,"那么long、S听"]],[1253,1253],[1262,1262]]],[1553777209203,["zyx@DESKTOP-60KJ218",[[-1,1261,"听"]],[1262,1262],[1261,1261]]],[1553777210921,["zyx@DESKTOP-60KJ218",[[1,1261,"tring"]],[1261,1261],[1266,1266]]],[1553777214680,["zyx@DESKTOP-60KJ218",[[1,1266,"类型就可以不"]],[1266,1266],[1272,1272]]],[1553777215752,["zyx@DESKTOP-60KJ218",[[-1,1269,"可以不"]],[1272,1272],[1269,1269]]],[1553777221649,["zyx@DESKTOP-60KJ218",[[1,1269,"不能应用。"]],[1269,1269],[1274,1274]]],[1553777223600,["zyx@DESKTOP-60KJ218",[[1,1274,"\n\n"]],[1274,1274],[1275,1275]]],[1553777225789,["zyx@DESKTOP-60KJ218",[[-1,1275,"\n"],[1,1276,"Q"]],[1275,1275],[1276,1276]]],[1553777226831,["zyx@DESKTOP-60KJ218",[[1,1276,"6  "]],[1276,1276],[1279,1279]]],[1553777228009,["zyx@DESKTOP-60KJ218",[[-1,1278," "]],[1279,1279],[1278,1278]]],[1553777229928,["zyx@DESKTOP-60KJ218",[[1,1278,"."]],[1278,1278],[1279,1279]]],[1553777231515,["zyx@DESKTOP-60KJ218",[[-1,1278,"."]],[1279,1279],[1278,1278]]],[1553777232878,["zyx@DESKTOP-60KJ218",[[1,1278,"."]],[1278,1278],[1279,1279]]],[1553777234352,["zyx@DESKTOP-60KJ218",[[-1,1277," ."]],[1279,1279],[1277,1277]]],[1553777235572,["zyx@DESKTOP-60KJ218",[[1,1277,"."]],[1277,1277],[1278,1278]]],[1553777304252,["zyx@DESKTOP-60KJ218",[[1,1278,"short s1 = 1; s1 = s1 + 1;有什么错? short s1 = 1; s1 += 1;有什么错?"]],[1278,1278],[1337,1337]]],[1553777308703,["zyx@DESKTOP-60KJ218",[[1,1275,"**"],[1,1337,"**"]],[1275,1337],[1275,1341]]],[1553777311223,["zyx@DESKTOP-60KJ218",[[1,1341,"\n\n"]],[1341,1341],[1342,1342]]],[1553777352668,["zyx@DESKTOP-60KJ218",[[-1,1342,"\n"],[1,1343,"前者"]],[1342,1342],[1344,1344]]],[1553777362178,["zyx@DESKTOP-60KJ218",[[1,1344,"中s1+1会使得"]],[1344,1344],[1352,1352]]],[1553777366224,["zyx@DESKTOP-60KJ218",[[-1,1350,"使得"]],[1352,1352],[1350,1350]]],[1553777367765,["zyx@DESKTOP-60KJ218",[[1,1350,"有"]],[1350,1350],[1351,1351]]],[1553777367977,["zyx@DESKTOP-60KJ218",[[-1,1350,"有"]],[1351,1351],[1350,1350]]],[1553777391001,["zyx@DESKTOP-60KJ218",[[1,1350,"自动进行类型转换，"]],[1350,1350],[1359,1359]]],[1553777395910,["zyx@DESKTOP-60KJ218",[[1,1359,"结果是振兴"]],[1359,1359],[1364,1364]]],[1553777396435,["zyx@DESKTOP-60KJ218",[[-1,1362,"振兴"]],[1364,1364],[1362,1362]]],[1553777407227,["zyx@DESKTOP-60KJ218",[[1,1362,"int型的，而是"]],[1362,1362],[1370,1370]]],[1553777407953,["zyx@DESKTOP-60KJ218",[[-1,1369,"是"]],[1370,1370],[1369,1369]]],[1553777408668,["zyx@DESKTOP-60KJ218",[[1,1369,"s1"]],[1369,1369],[1371,1371]]],[1553777408863,["zyx@DESKTOP-60KJ218",[[1,1371,"\n\n"]],[1371,1371],[1372,1372]]],[1553777409392,["zyx@DESKTOP-60KJ218",[[-1,1372,"\n"]],[1372,1372],[1371,1371]]],[1553777415204,["zyx@DESKTOP-60KJ218",[[1,1371,"是short类型，讲"]],[1371,1371],[1381,1381]]],[1553777416266,["zyx@DESKTOP-60KJ218",[[-1,1380,"讲"]],[1381,1381],[1380,1380]]],[1553777443755,["zyx@DESKTOP-60KJ218",[[1,1380,"将整型赋值给short型会出错。"]],[1380,1380],[1396,1396]]],[1553777444951,["zyx@DESKTOP-60KJ218",[[1,1397,"\n"]],[1396,1396],[1397,1397]]],[1553777447967,["zyx@DESKTOP-60KJ218",[[-1,1397,"\n"],[1,1398,"Q"]],[1397,1397],[1398,1398]]],[1553777451352,["zyx@DESKTOP-60KJ218",[[1,1398,"7."]],[1398,1398],[1400,1400]]],[1553777463228,["zyx@DESKTOP-60KJ218",[[1,1396,"而后者中"]],[1396,1396],[1400,1400]]],[1553777468470,["zyx@DESKTOP-60KJ218",[[-1,1368,"而"]],[1369,1369],[1368,1368]]],[1553777487689,["zyx@DESKTOP-60KJ218",[[1,1399,"++++"]],[1399,1399],[1401,1401]]],[1553777488462,["zyx@DESKTOP-60KJ218",[[-1,1401,"++"]],[1401,1401],[1399,1399]]],[1553777490489,["zyx@DESKTOP-60KJ218",[[-1,1399,"++"]],[1401,1401],[1399,1399]]],[1553777499474,["zyx@DESKTOP-60KJ218",[[1,1399,"+=语句Java会将"]],[1399,1399],[1409,1409]]],[1553777500696,["zyx@DESKTOP-60KJ218",[[-1,1407,"会将"]],[1409,1409],[1407,1407]]],[1553777510001,["zyx@DESKTOP-60KJ218",[[1,1407,"编译时会总动是被"]],[1407,1407],[1415,1415]]],[1553777510656,["zyx@DESKTOP-60KJ218",[[-1,1411,"总动是被"]],[1415,1415],[1411,1411]]],[1553777511650,["zyx@DESKTOP-60KJ218",[[1,1411,"自动"]],[1411,1411],[1413,1413]]],[1553777536879,["zyx@DESKTOP-60KJ218",[[1,1413,"识别类型，并进行特殊处理，因此后者没有错误。"]],[1413,1413],[1435,1435]]],[1553777562470,["zyx@DESKTOP-60KJ218",[[1,1439,"用最有效率的方法算出 2 乘以 8 等于几?用最有效的方法算出奇数和偶数 ？"]],[1439,1439],[1477,1477]]],[1553777568495,["zyx@DESKTOP-60KJ218",[[1,1436,"**"],[1,1477,"**"]],[1436,1477],[1436,1481]]],[1553777571047,["zyx@DESKTOP-60KJ218",[[1,1481,"\n\n"]],[1481,1481],[1482,1482]]],[1553777573768,["zyx@DESKTOP-60KJ218",[[-1,1482,"\n"],[1,1483,"2"]],[1482,1482],[1483,1483]]],[1553777584403,["zyx@DESKTOP-60KJ218",[[1,1483,"*8=16,women"]],[1483,1483],[1494,1494]]],[1553777585646,["zyx@DESKTOP-60KJ218",[[-1,1488,",women"]],[1494,1494],[1488,1488]]],[1553777607261,["zyx@DESKTOP-60KJ218",[[1,1488,"，我们可以得到2的二进制位10,"]],[1488,1488],[1504,1504]]],[1553777609895,["zyx@DESKTOP-60KJ218",[[-1,1503,","]],[1504,1504],[1503,1503]]],[1553777611324,["zyx@DESKTOP-60KJ218",[[1,1503,"，er"]],[1503,1503],[1506,1506]]],[1553777613264,["zyx@DESKTOP-60KJ218",[[-1,1503,"，er"]],[1506,1506],[1503,1503]]],[1553777622036,["zyx@DESKTOP-60KJ218",[[1,1503,"，而16的二进制数位"]],[1503,1503],[1513,1513]]],[1553777623025,["zyx@DESKTOP-60KJ218",[[-1,1512,"位"]],[1513,1513],[1512,1512]]],[1553777630927,["zyx@DESKTOP-60KJ218",[[1,1512,"为0"]],[1512,1512],[1514,1514]]],[1553777634428,["zyx@DESKTOP-60KJ218",[[1,1513,"1"]],[1513,1513],[1514,1514]]],[1553777655134,["zyx@DESKTOP-60KJ218",[[1,1515,"000，我们发现"]],[1514,1514],[1523,1523]]],[1553777655967,["zyx@DESKTOP-60KJ218",[[-1,1519,"我们发现"]],[1523,1523],[1519,1519]]],[1553777680708,["zyx@DESKTOP-60KJ218",[[1,1519,"发现2的二进制数中的1向左移动三维"]],[1519,1519],[1536,1536]]],[1553777681536,["zyx@DESKTOP-60KJ218",[[-1,1534,"三维"]],[1536,1536],[1534,1534]]],[1553777690082,["zyx@DESKTOP-60KJ218",[[1,1534,"三位就可以得到16的"]],[1534,1534],[1544,1544]]],[1553777742572,["zyx@DESKTOP-60KJ218",[[1,1544,"二进制数。因此我们可以使用位移运算来快速计算2>>3"]],[1544,1544],[1570,1570]]],[1553777755672,["zyx@DESKTOP-60KJ218",[[-1,1567,">>"]],[1569,1569],[1567,1567]]],[1553777757161,["zyx@DESKTOP-60KJ218",[[1,1567,"《《"]],[1567,1567],[1569,1569]]],[1553777758298,["zyx@DESKTOP-60KJ218",[[-1,1567,"《《"]],[1569,1569],[1567,1567]]],[1553777759206,["zyx@DESKTOP-60KJ218",[[1,1567,"<<"]],[1567,1567],[1569,1569]]],[1553777765965,["zyx@DESKTOP-60KJ218",[[1,1570,"."]],[1570,1570],[1571,1571]]],[1553777766904,["zyx@DESKTOP-60KJ218",[[-1,1570,"."]],[1571,1571],[1570,1570]]],[1553777767451,["zyx@DESKTOP-60KJ218",[[1,1570,"。"]],[1570,1570],[1571,1571]]],[1553777768471,["zyx@DESKTOP-60KJ218",[[1,1571,"\n\n"]],[1571,1571],[1572,1572]]],[1553777771989,["zyx@DESKTOP-60KJ218",[[-1,1572,"\n"],[1,1573,"技术"]],[1572,1572],[1574,1574]]],[1553777772745,["zyx@DESKTOP-60KJ218",[[-1,1573,"术"]],[1574,1574],[1573,1573]]],[1553777772896,["zyx@DESKTOP-60KJ218",[[-1,1572,"技"],[1,1573,"\n"]],[1573,1573],[1572,1572]]],[1553777776274,["zyx@DESKTOP-60KJ218",[[-1,1572,"\n"],[1,1573,"奇数"]],[1572,1572],[1574,1574]]],[1553777793482,["zyx@DESKTOP-60KJ218",[[1,1574,"的二进制数最后一位总是1，因为只有最后一位"]],[1574,1574],[1595,1595]]],[1553777797881,["zyx@DESKTOP-60KJ218",[[-1,1587,"因为只有最后一位"]],[1595,1595],[1587,1587]]],[1553777810604,["zyx@DESKTOP-60KJ218",[[1,1587,"而偶数的二进制数总是0，因此我么可以"]],[1587,1587],[1605,1605]]],[1553777811041,["zyx@DESKTOP-60KJ218",[[-1,1602,"么可以"]],[1605,1605],[1602,1602]]],[1553777853324,["zyx@DESKTOP-60KJ218",[[1,1602,"们可以使用与运算来进行奇偶数的识别。例如这个数为n，if(n"]],[1602,1602],[1632,1632]]],[1553777853944,["zyx@DESKTOP-60KJ218",[[-1,1631,"n"]],[1632,1632],[1631,1631]]],[1553777860464,["zyx@DESKTOP-60KJ218",[[1,1631,"(n&1)===="]],[1631,1631],[1638,1638]]],[1553777862123,["zyx@DESKTOP-60KJ218",[[-1,1638,"=="]],[1638,1638],[1636,1636]]],[1553777871667,["zyx@DESKTOP-60KJ218",[[1,1638,"1)时，此书"]],[1638,1638],[1644,1644]]],[1553777872105,["zyx@DESKTOP-60KJ218",[[-1,1643,"书"]],[1644,1644],[1643,1643]]],[1553777896076,["zyx@DESKTOP-60KJ218",[[1,1643,"数就是奇数，"]],[1643,1643],[1649,1649]]],[1553777902488,["zyx@DESKTOP-60KJ218",[[-1,1648,"，"]],[1649,1649],[1648,1648]]],[1553777903219,["zyx@DESKTOP-60KJ218",[[1,1648,"；if((n&1)==1)时"]],[1648,1648],[1662,1662]]],[1553777906794,["zyx@DESKTOP-60KJ218",[[-1,1659,"1"]],[1660,1660],[1659,1659]]],[1553777907693,["zyx@DESKTOP-60KJ218",[[1,1659,"0"]],[1659,1659],[1660,1660]]],[1553777922044,["zyx@DESKTOP-60KJ218",[[1,1662,"，次数为"]],[1662,1662],[1666,1666]]],[1553777923764,["zyx@DESKTOP-60KJ218",[[-1,1663,"次数为"]],[1666,1666],[1663,1663]]],[1553777930829,["zyx@DESKTOP-60KJ218",[[1,1663,"此数为"]],[1663,1663],[1666,1666]]],[1553777933530,["zyx@DESKTOP-60KJ218",[[1,1666,"偶数。"]],[1666,1666],[1669,1669]]],[1553777951528,["zyx@DESKTOP-60KJ218",[[1,1669,"\n\n"]],[1669,1669],[1670,1670]]],[1553778177790,["zyx@DESKTOP-60KJ218",[[-1,1670,"\n"],[1,1671,"Q"]],[1670,1670],[1671,1671]]],[1553778180448,["zyx@DESKTOP-60KJ218",[[1,1671,"8."]],[1671,1671],[1673,1673]]],[1553778213051,["zyx@DESKTOP-60KJ218",[[1,1673,"== 和 equals 的区别是什么？"]],[1673,1673],[1692,1692]]],[1553778214672,["zyx@DESKTOP-60KJ218",[[1,1692,"\n\n"]],[1692,1692],[1693,1693]]],[1553778217956,["zyx@DESKTOP-60KJ218",[[1,1670,"**"],[1,1692,"**"]],[1670,1692],[1670,1696]]],[1553778243076,["zyx@DESKTOP-60KJ218",[[1,1697,"l == 解读\n\n对于基本类型和引用类型 == 的作用效果是不同的，基本类型：比较的是值是否相同；引用类型：比较的是引用是否相同；\n\nl equals 解读\n\nequals 本质上就是 ==，只不过 String 和 Integer 等重写了 equals 方法，把它变成了值比较。String 重写了 Object 的 equals 方法，把引用比较改成了值比较。"]],[1697,1697],[1880,1880]]],[1553778251065,["zyx@DESKTOP-60KJ218",[[-1,1638,"1)时，此数就是奇数；if((n&1)"]],[1638,1657],[1638,1638]]],[1553778254419,["zyx@DESKTOP-60KJ218",[[1,1638,"1)时，此数就是奇数；if((n&1)"]],[1638,1638],[1638,1657]]],[1553778257468,["zyx@DESKTOP-60KJ218",[[-1,1636,"=="],[-1,1657,"=="]],[1638,1657],[1636,1655]]],[1553778262669,["zyx@DESKTOP-60KJ218",[[1,1636,"===="]],[1636,1636],[1638,1638]]],[1553778264145,["zyx@DESKTOP-60KJ218",[[-1,1638,"=="]],[1638,1638],[1636,1636]]],[1553778266283,["zyx@DESKTOP-60KJ218",[[1,1636,"、"]],[1636,1636],[1637,1637]]],[1553778267284,["zyx@DESKTOP-60KJ218",[[-1,1636,"、"]],[1637,1637],[1636,1636]]],[1553778267606,["zyx@DESKTOP-60KJ218",[[1,1636,"、"]],[1636,1636],[1637,1637]]],[1553778268722,["zyx@DESKTOP-60KJ218",[[-1,1636,"、"]],[1637,1637],[1636,1636]]],[1553778269293,["zyx@DESKTOP-60KJ218",[[1,1636,"\\"]],[1636,1636],[1637,1637]]],[1553778272865,["zyx@DESKTOP-60KJ218",[[1,1658,"===="]],[1658,1658],[1660,1660]]],[1553778274562,["zyx@DESKTOP-60KJ218",[[-1,1660,"=="]],[1660,1660],[1658,1658]]],[1553778275424,["zyx@DESKTOP-60KJ218",[[1,1658,"\\"]],[1658,1658],[1659,1659]]],[1553778296889,["zyx@DESKTOP-60KJ218",[[-1,1699,"l == "]],[1704,1704],[1699,1699]]],[1553778298104,["zyx@DESKTOP-60KJ218",[[1,1699,"===="]],[1699,1699],[1701,1701]]],[1553778300193,["zyx@DESKTOP-60KJ218",[[-1,1702,"=解读"]],[1705,1705],[1702,1702]]],[1553778302579,["zyx@DESKTOP-60KJ218",[[1,1702,"=解读"]],[1702,1702],[1705,1705]]],[1553778303965,["zyx@DESKTOP-60KJ218",[[-1,1699,"===="]],[1701,1701],[1699,1699]]],[1553778306307,["zyx@DESKTOP-60KJ218",[[-1,1699,"解读"]],[1701,1701],[1699,1699]]],[1553778307632,["zyx@DESKTOP-60KJ218",[[-1,1700,"\n"]],[1700,1700],[1699,1699]]],[1553778309676,["zyx@DESKTOP-60KJ218",[[1,1699,"\\===="]],[1699,1699],[1702,1702]]],[1553778311410,["zyx@DESKTOP-60KJ218",[[-1,1702,"=="]],[1704,1704],[1702,1702]]],[1553778315858,["zyx@DESKTOP-60KJ218",[[-1,1761,"l "]],[1763,1763],[1761,1761]]],[1553778316632,["zyx@DESKTOP-60KJ218",[[-1,1768,"解读"]],[1770,1770],[1768,1768]]],[1553778318027,["zyx@DESKTOP-60KJ218",[[-1,1769,"\n"]],[1769,1769],[1768,1768]]],[1553778319277,["zyx@DESKTOP-60KJ218",[[-1,1760,"\n"]],[1760,1760],[1759,1759]]],[1553778365697,["zyx@DESKTOP-60KJ218",[[1,1672,"\n"]],[1671,1671],[1672,1672]]],[1553778368490,["zyx@DESKTOP-60KJ218",[[-1,1676,"8"]],[1677,1677],[1676,1676]]],[1553778369106,["zyx@DESKTOP-60KJ218",[[1,1676,"9"]],[1676,1676],[1677,1677]]],[1553778373483,["zyx@DESKTOP-60KJ218",[[1,1672,"**Q9.== 和 equals 的区别是什么？**"]],[1672,1672],[1698,1698]]],[1553778375426,["zyx@DESKTOP-60KJ218",[[-1,1675,"9"]],[1676,1676],[1675,1675]]],[1553778375818,["zyx@DESKTOP-60KJ218",[[1,1675,"8"]],[1675,1675],[1676,1676]]],[1553778381607,["zyx@DESKTOP-60KJ218",[[-1,1677,"== 和 equals 的区别是什么"]],[1695,1695],[1677,1677]]],[1553778382758,["zyx@DESKTOP-60KJ218",[[1,1677,"shie"]],[1677,1677],[1681,1681]]],[1553778384248,["zyx@DESKTOP-60KJ218",[[-1,1677,"shie"]],[1681,1681],[1677,1677]]],[1553778388591,["zyx@DESKTOP-60KJ218",[[1,1677,"什么是引用类型"]],[1677,1677],[1684,1684]]],[1553778390240,["zyx@DESKTOP-60KJ218",[[1,1688,"\n"]],[1687,1687],[1688,1688]]],[1553778394814,["zyx@DESKTOP-60KJ218",[[1,1688,"引用类型包括"]],[1688,1688],[1694,1694]]],[1553778396718,["zyx@DESKTOP-60KJ218",[[-1,1688,"引用类型包括"]],[1694,1694],[1688,1688]]],[1553778400135,["zyx@DESKTOP-60KJ218",[[1,1688,"常用引用类型"]],[1688,1688],[1694,1694]]],[1553778408013,["zyx@DESKTOP-60KJ218",[[1,1694,"为数组，接口，类"]],[1694,1694],[1702,1702]]],[1553778408275,["zyx@DESKTOP-60KJ218",[[-1,1701,"类"]],[1702,1702],[1701,1701]]],[1553778409417,["zyx@DESKTOP-60KJ218",[[1,1701,"类"]],[1701,1701],[1702,1702]]],[1553778465921,["zyx@DESKTOP-60KJ218",[[1,1702,"（尤其是勒种的"]],[1702,1702],[1709,1709]]],[1553778467938,["zyx@DESKTOP-60KJ218",[[-1,1705,"是勒种的"]],[1709,1709],[1705,1705]]],[1553778473092,["zyx@DESKTOP-60KJ218",[[1,1705,"String类）"]],[1705,1705],[1713,1713]]],[1553778485757,["zyx@DESKTOP-60KJ218",[[1,1712,"，最常见，最长考"]],[1712,1712],[1720,1720]]],[1553778493514,["zyx@DESKTOP-60KJ218",[[1,1722,"\n"]],[1721,1721],[1722,1722]]],[1553778527193,["zyx@DESKTOP-60KJ218",[[1,1688,"\n"]],[1688,1688],[1689,1689]]],[1553778528240,["zyx@DESKTOP-60KJ218",[[1,1688,"**在Java中类型可分为两大类：值类型与引用类型。**值类型就是基本数据类型（如int ,double 等），而引用类型,是指除了基本的变量类型之外的所有类型（如通过 class 定义的类型）。所有的类型在内存中都会分配一定的存储空间(形参在使用的时候也会分配存储空间,方法调用完成之后,这块存储空间自动消失), **基本的变量类型只有一块存储空间(分配在stack中), 而引用类型有两块存储空间(一块在stack中,一块在heap中)**，在函数调用时Java是传值还是传引用"]],[1688,1688],[1929,1929]]],[1553778532914,["zyx@DESKTOP-60KJ218",[[-1,1688,"**"]],[1690,1690],[1688,1688]]],[1553778534749,["zyx@DESKTOP-60KJ218",[[-1,1712,"**"]],[1714,1714],[1712,1712]]],[1553778536420,["zyx@DESKTOP-60KJ218",[[-1,1842,"**"]],[1844,1844],[1842,1842]]],[1553778538593,["zyx@DESKTOP-60KJ218",[[-1,1902,"**"]],[1904,1904],[1902,1902]]],[1553778543390,["zyx@DESKTOP-60KJ218",[[1,1921,"。"]],[1921,1921],[1922,1922]]],[1553778552139,["zyx@DESKTOP-60KJ218",[[-1,1745,","]],[1746,1746],[1745,1745]]],[1553778552864,["zyx@DESKTOP-60KJ218",[[1,1745,"，"]],[1745,1745],[1746,1746]]],[1553778577340,["zyx@DESKTOP-60KJ218",[[-1,1841," "]],[1842,1842],[1841,1841]]],[1553778578216,["zyx@DESKTOP-60KJ218",[[1,1841,"，"]],[1841,1841],[1842,1842]]],[1553778579426,["zyx@DESKTOP-60KJ218",[[-1,1840,",，"]],[1842,1842],[1840,1840]]],[1553778580397,["zyx@DESKTOP-60KJ218",[[1,1840,"，"]],[1840,1840],[1841,1841]]],[1553778605673,["zyx@DESKTOP-60KJ218",[[-1,1901,"，在函数调用时Java是传值还是传引用。"]],[1902,1921],[1901,1901]]],[1553778606461,["zyx@DESKTOP-60KJ218",[[1,1901,"。"]],[1901,1901],[1902,1902]]],[1553778637097,["zyx@DESKTOP-60KJ218",[[1,1903,"\n"]],[1902,1902],[1903,1903]]],[1553778716944,["zyx@DESKTOP-60KJ218",[[1,1903,"![引用类型]($resource/%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B.png)"]],[1903,1903],[1963,1963]]],[1553778722626,["zyx@DESKTOP-60KJ218",[[-1,1997,"\n"]],[1997,1997],[1996,1996]]],[1553778825779,["zyx@DESKTOP-60KJ218",[[1,1963,"\n"]],[1962,1962],[1963,1963]]],[1553778826234,["zyx@DESKTOP-60KJ218",[[1,1963,"**引用其实就像是一个对象的名字或者别名 (alias)**，一个对象在内存中会请求一块空间来保存数据，根据对象的大小，它可能需要占用的空间大小也不等。访问对象的时候，我们不会直接是访问对象在内存中的数据，而是通过引用去访问。引用也是一种数据类型，我们可以把它想象为类似 C++ 语言中指针的东西，它指示了对象在内存中的地址——只不过我们不能够观察到这个地址究竟是什么。\n\n如果我们定义了不止一个引用指向同一个对象，那么这些引用是不相同的，因为引用也是一种数据类型，需要一定的内存空间（stack，栈空间）来保存。但是它们的值是相同的，都指示同一个对象在内存（heap，堆空间）的中位置。"]],[1963,1963],[2257,2257]]],[1553778829226,["zyx@DESKTOP-60KJ218",[[-1,1963,"**"]],[1965,1965],[1963,1963]]],[1553778830866,["zyx@DESKTOP-60KJ218",[[-1,1989,"**"]],[1991,1991],[1989,1989]]],[1553778852780,["zyx@DESKTOP-60KJ218",[[-1,2254,"常用引用类型为数组，接口，类（尤其String类，最常见，最长考）"]],[2254,2287],[2254,2254]]],[1553778864983,["zyx@DESKTOP-60KJ218",[[1,1782,"常用引用类型为数组，接口，类（尤其String类，最常见，最长考）。"]],[1782,1782],[1816,1816]]],[1553779122281,["zyx@DESKTOP-60KJ218",[[1,1997,"**（1） 引用是一种数据类型（保存在stack中），保存了对象在内存（heap，堆空间）中的地址，这种类型即不是我们平时所说的简单数据类型也不是类实例(对象)；**\n\n**（2） 不同的引用可能指向同一个对象，换句话说，一个对象可以有多个引用，即该类类型的变量。**"]],[1997,1997],[2131,2131]]],[1553779126242,["zyx@DESKTOP-60KJ218",[[-1,1997,"**（"]],[2000,2000],[1997,1997]]],[1553779127329,["zyx@DESKTOP-60KJ218",[[-1,2075,"**"]],[2077,2077],[2075,2075]]],[1553779130834,["zyx@DESKTOP-60KJ218",[[-1,2077,"**（"]],[2079,2079],[2077,2077]]],[1553779142954,["zyx@DESKTOP-60KJ218",[[-1,2121,"**"]],[2123,2123],[2121,2121]]],[1553779145883,["zyx@DESKTOP-60KJ218",[[-1,2076,"\n"]],[2076,2076],[2075,2075]]],[1553779147282,["zyx@DESKTOP-60KJ218",[[1,2120,"\n"]],[2120,2120],[2121,2121]]],[1553779149777,["zyx@DESKTOP-60KJ218",[[-1,2303,"\n"]],[2303,2303],[2302,2302]]],[1553779163613,["zyx@DESKTOP-60KJ218",[[1,1483,"\\"],[1,1567,"\\"],[1,1568,"\\"],[-1,1636,"\\"],[-1,1658,"\\"],[-1,2439,"\\"]],[2302,2302],[0,0]]],[1553779173964,["zyx@DESKTOP-60KJ218",[[-1,2440,"=="]],[2442,2442],[2440,2440]]],[1553779182346,["zyx@DESKTOP-60KJ218",[[1,1689,"\n"]],[1688,1688],[1689,1689]]],[1553779186610,["zyx@DESKTOP-60KJ218",[[1,1673,"\n"]],[1672,1672],[1673,1673]]],[1553779188074,["zyx@DESKTOP-60KJ218",[[1,1674,"\n"]],[1673,1673],[1674,1674]]],[1553779189887,["zyx@DESKTOP-60KJ218",[[-1,1674,"\n"]],[1674,1674],[1673,1673]]],[1553779192378,["zyx@DESKTOP-60KJ218",[[1,1482,"\n"]],[1481,1481],[1482,1482]]],[1553779193521,["zyx@DESKTOP-60KJ218",[[1,1436,"\n"]],[1436,1436],[1437,1437]]],[1553779195355,["zyx@DESKTOP-60KJ218",[[1,1342,"\n"]],[1341,1341],[1342,1342]]],[1553779196410,["zyx@DESKTOP-60KJ218",[[1,1275,"\n"]],[1275,1275],[1276,1276]]],[1553779198065,["zyx@DESKTOP-60KJ218",[[1,1116,"\n"]],[1116,1116],[1117,1117]]],[1553779199057,["zyx@DESKTOP-60KJ218",[[1,1175,"\n"]],[1174,1174],[1175,1175]]],[1553779200386,["zyx@DESKTOP-60KJ218",[[1,1018,"\n"]],[1018,1018],[1019,1019]]],[1553779201217,["zyx@DESKTOP-60KJ218",[[1,1063,"\n"]],[1062,1062],[1063,1063]]],[1553779203674,["zyx@DESKTOP-60KJ218",[[1,624,"\n"]],[624,624],[625,625]]],[1553779204609,["zyx@DESKTOP-60KJ218",[[1,677,"\n"]],[676,676],[677,677]]],[1553779207018,["zyx@DESKTOP-60KJ218",[[1,223,"\n"]],[223,223],[224,224]]],[1553779207921,["zyx@DESKTOP-60KJ218",[[1,279,"\n"]],[278,278],[279,279]]],[1553779209074,["zyx@DESKTOP-60KJ218",[[1,20,"\n"]],[20,20],[21,21]]],[1553779210027,["zyx@DESKTOP-60KJ218",[[-1,20,"\n"]],[21,21],[20,20]]],[1553779210931,["zyx@DESKTOP-60KJ218",[[1,44,"\n"]],[43,43],[44,44]]],[1553779224235,["zyx@DESKTOP-60KJ218",[[-1,2039,"了"]],[2040,2040],[2039,2039]]],[1553779225581,["zyx@DESKTOP-60KJ218",[[1,2039,"的"]],[2039,2039],[2040,2040]]],[1553779229513,["zyx@DESKTOP-60KJ218",[[-1,2039,"的"]],[2040,2040],[2039,2039]]],[1553779249066,["zyx@DESKTOP-60KJ218",[[1,2624,"\n"]],[2623,2623],[2624,2624]]],[1553779249618,["zyx@DESKTOP-60KJ218",[[1,2625,"\n"]],[2624,2624],[2625,2625]]],[1553779255068,["zyx@DESKTOP-60KJ218",[[1,2625,"**Q9.== 和 equals 的区别是什么？**"]],[2625,2625],[2651,2651]]],[1553779257673,["zyx@DESKTOP-60KJ218",[[-1,2628,"9"]],[2629,2629],[2628,2628]]],[1553779257955,["zyx@DESKTOP-60KJ218",[[1,2628,"10"]],[2628,2628],[2630,2630]]],[1553779293639,["zyx@DESKTOP-60KJ218",[[-1,2631,"== 和 equals 的区别是"],[1,2647,"java 中操作字符串都有哪些类？它们之间有"],[1,2649,"区别"]],[2631,2650],[2658,2658]]],[1553779296171,["zyx@DESKTOP-60KJ218",[[-1,2631,"j"]],[2632,2632],[2631,2631]]],[1553779296737,["zyx@DESKTOP-60KJ218",[[1,2631,"J"]],[2631,2631],[2632,2632]]],[1553779298874,["zyx@DESKTOP-60KJ218",[[1,2661,"\n"]],[2660,2660],[2661,2661]]],[1553779299995,["zyx@DESKTOP-60KJ218",[[1,2662,"\n"]],[2661,2661],[2662,2662]]],[1553779301269,["zyx@DESKTOP-60KJ218",[[-1,2662,"\n"],[1,2663,"S"]],[2662,2662],[2663,2663]]],[1553779314065,["zyx@DESKTOP-60KJ218",[[1,2663,"tring、StringBuffer、StringBUild"]],[2663,2663],[2693,2693]]],[1553779315723,["zyx@DESKTOP-60KJ218",[[-1,2689,"Uild"]],[2693,2693],[2689,2689]]],[1553779319114,["zyx@DESKTOP-60KJ218",[[1,2689,"uild类"]],[2689,2689],[2694,2694]]],[1553779325390,["zyx@DESKTOP-60KJ218",[[1,2662,"主要是"]],[2662,2662],[2665,2665]]],[1553779329242,["zyx@DESKTOP-60KJ218",[[1,2697,"。"]],[2697,2697],[2698,2698]]],[1553779348482,["zyx@DESKTOP-60KJ218",[[1,2698,"\n\n"]],[2698,2698],[2699,2699]]],[1553779348714,["zyx@DESKTOP-60KJ218",[[1,2699,"String 类是 final 类型的，因此不可以继承这个类、不能修改这个类。为了提高效 率节省空间，我们应该用 StringBuffer 类。：对于字符串常量，如果内容相同，Java 认为它们代表同 一个 String 对象。而用关键字new调用构造器，总是会创建一个新的对象，无论内容是否相同。"]],[2699,2699],[2848,2848]]],[1553779356404,["zyx@DESKTOP-60KJ218",[[-1,2738,"为了提高效 率节省空间，我们应该用 StringBuffer 类。："]],[2738,2772],[2738,2738]]],[1553779357931,["zyx@DESKTOP-60KJ218",[[1,2815,"\n"]],[2814,2814],[2815,2815]]],[1553779358139,["zyx@DESKTOP-60KJ218",[[1,2815,"为了提高效 率节省空间，我们应该用 StringBuffer 类。："]],[2815,2815],[2849,2849]]],[1553779393204,["zyx@DESKTOP-60KJ218",[[-1,2820," "]],[2821,2821],[2820,2820]]],[1553779397241,["zyx@DESKTOP-60KJ218",[[1,2815,"但是"]],[2815,2815],[2817,2817]]],[1553779404555,["zyx@DESKTOP-60KJ218",[[-1,2849,"："]],[2850,2850],[2849,2849]]],[1553779410603,["zyx@DESKTOP-60KJ218",[[1,2849,"StringBuffer"]],[2849,2849],[2861,2861]]],[1553779539315,["zyx@DESKTOP-60KJ218",[[1,2737,"，"]],[2737,2737],[2738,2738]]],[1553779545381,["zyx@DESKTOP-60KJ218",[[1,2738,"底层源码中有针对性"]],[2738,2738],[2747,2747]]],[1553779546187,["zyx@DESKTOP-60KJ218",[[-1,2746,"性"]],[2747,2747],[2746,2746]]],[1553779574417,["zyx@DESKTOP-60KJ218",[[1,2746,"String数据的修改方法，都是针对"]],[2746,2746],[2764,2764]]],[1553779575514,["zyx@DESKTOP-60KJ218",[[-1,2762,"针对"]],[2764,2764],[2762,2762]]],[1553779577325,["zyx@DESKTOP-60KJ218",[[1,2762,"创建"]],[2762,2762],[2764,2764]]],[1553779578108,["zyx@DESKTOP-60KJ218",[[-1,2762,"创建"]],[2764,2764],[2762,2762]]],[1553779581260,["zyx@DESKTOP-60KJ218",[[1,2762,"从新出强加个"]],[2762,2762],[2768,2768]]],[1553779582114,["zyx@DESKTOP-60KJ218",[[-1,2762,"从新出强加个"]],[2768,2768],[2762,2762]]],[1553779592732,["zyx@DESKTOP-60KJ218",[[1,2762,"重新创建了一个String对下几个"]],[2762,2762],[2779,2779]]],[1553779595502,["zyx@DESKTOP-60KJ218",[[-1,2775,"对下几个"]],[2779,2779],[2775,2775]]],[1553779600105,["zyx@DESKTOP-60KJ218",[[1,2775,"对象，"]],[2775,2775],[2778,2778]]],[1553779608801,["zyx@DESKTOP-60KJ218",[[1,2778,"而原来的String对象未曾改变"]],[2778,2778],[2794,2794]]],[1553779768300,["zyx@DESKTOP-60KJ218",[[1,2918,"县城噶"]],[2918,2918],[2921,2921]]],[1553779768755,["zyx@DESKTOP-60KJ218",[[-1,2918,"县城噶"]],[2921,2921],[2918,2918]]],[1553779778103,["zyx@DESKTOP-60KJ218",[[1,2918,"线程安全，效率低"]],[2918,2918],[2926,2926]]],[1553779792087,["zyx@DESKTOP-60KJ218",[[1,2926,"，开销大，可以使用StringBuilder"]],[2926,2926],[2948,2948]]],[1553779809894,["zyx@DESKTOP-60KJ218",[[1,2884,"并且可以更改String类型"]],[2884,2884],[2898,2898]]],[1553779814071,["zyx@DESKTOP-60KJ218",[[1,2890,"对"]],[2890,2890],[2891,2891]]],[1553779819174,["zyx@DESKTOP-60KJ218",[[1,2899,"数据更改"]],[2899,2899],[2903,2903]]],[1553779824752,["zyx@DESKTOP-60KJ218",[[1,2901,"直接"]],[2901,2901],[2903,2903]]],[1553779828606,["zyx@DESKTOP-60KJ218",[[-1,2908,"应该"]],[2910,2910],[2908,2908]]],[1553779830906,["zyx@DESKTOP-60KJ218",[[1,2908,"可使用"]],[2908,2908],[2911,2911]]],[1553779834238,["zyx@DESKTOP-60KJ218",[[-1,2912," "]],[2913,2913],[2912,2912]]],[1553779840611,["zyx@DESKTOP-60KJ218",[[-1,2952,"可以"]],[2954,2954],[2952,2952]]],[1553779849117,["zyx@DESKTOP-60KJ218",[[1,2952,"因此可以改用"]],[2952,2952],[2958,2958]]],[1553779850643,["zyx@DESKTOP-60KJ218",[[-1,2958,"使用"]],[2960,2960],[2958,2958]]],[1553779872922,["zyx@DESKTOP-60KJ218",[[1,2971,"。StringBuilder县城不安全"]],[2971,2971],[2990,2990]]],[1553779876329,["zyx@DESKTOP-60KJ218",[[-1,2985,"县城不安全"]],[2990,2990],[2985,2985]]],[1553779881633,["zyx@DESKTOP-60KJ218",[[1,2985,"线程不安全，"]],[2985,2985],[2991,2991]]],[1553779887885,["zyx@DESKTOP-60KJ218",[[1,2944,"同步，"]],[2944,2944],[2947,2947]]],[1553779895625,["zyx@DESKTOP-60KJ218",[[1,2994,"异步社区"]],[2994,2994],[2998,2998]]],[1553779895964,["zyx@DESKTOP-60KJ218",[[-1,2996,"社区"]],[2998,2998],[2996,2996]]],[1553779896836,["zyx@DESKTOP-60KJ218",[[1,2996,"，"]],[2996,2996],[2997,2997]]],[1553779902295,["zyx@DESKTOP-60KJ218",[[1,2997,"效率高。"]],[2997,2997],[3001,3001]]],[1553779902812,["zyx@DESKTOP-60KJ218",[[-1,3000,"。"]],[3001,3001],[3000,3000]]],[1553779903935,["zyx@DESKTOP-60KJ218",[[1,3000,"。"]],[3000,3000],[3001,3001]]],[1553779905146,["zyx@DESKTOP-60KJ218",[[1,3002,"\n"]],[3001,3001],[3002,3002]]],[1553779906723,["zyx@DESKTOP-60KJ218",[[1,3003,"\n"]],[3002,3002],[3003,3003]]],[1553779908491,["zyx@DESKTOP-60KJ218",[[-1,3003,"\n"],[1,3004,"Q"]],[3003,3003],[3004,3004]]],[1553779912856,["zyx@DESKTOP-60KJ218",[[1,3004,"11.设么是"]],[3004,3004],[3010,3010]]],[1553779913459,["zyx@DESKTOP-60KJ218",[[-1,3007,"设么是"]],[3010,3010],[3007,3007]]],[1553779925281,["zyx@DESKTOP-60KJ218",[[1,3007,"什么是同步和异步？什么是县城"]],[3007,3007],[3021,3021]]],[1553779926155,["zyx@DESKTOP-60KJ218",[[-1,3019,"县城"]],[3021,3021],[3019,3019]]],[1553779930167,["zyx@DESKTOP-60KJ218",[[1,3019,"线程安全？"]],[3019,3019],[3024,3024]]],[1553779936771,["zyx@DESKTOP-60KJ218",[[1,3003,"**"],[1,3024,"**"]],[3003,3024],[3003,3028]]],[1553779957035,["zyx@DESKTOP-60KJ218",[[1,3028,"\n\n"]],[3028,3028],[3029,3029]]],[1553779957174,["zyx@DESKTOP-60KJ218",[[1,3030,"\n"]],[3029,3029],[3030,3030]]],[1553779957324,["zyx@DESKTOP-60KJ218",[[1,3030,"同步，可以理解为在执行完一个函数或方法之后，一直等待系统返回值或消息，这时程序是出于阻塞的，只有接收到返回的值或消息后才往下执行其他的命令。"]],[3030,3030],[3100,3100]]],[1553779974003,["zyx@DESKTOP-60KJ218",[[1,3101,"\n"]],[3100,3100],[3101,3101]]],[1553779974148,["zyx@DESKTOP-60KJ218",[[1,3102,"\n"]],[3101,3101],[3102,3102]]],[1553779974507,["zyx@DESKTOP-60KJ218",[[1,3102,"异步，执行完函数或方法后，不必阻塞性地等待返回值或消息，只需要向系统委托一个异步过程，那么当系统接收到返回值或消息时，系统会自动触发委托的异步过程，从而完成一个完整的流程。"]],[3102,3102],[3188,3188]]],[1553779995071,["zyx@DESKTOP-60KJ218",[[1,3100,"如打电话，通信双方不能断（我们是同时进行，同步），你一句我一句，这样的好处是，对方想表达的信息我马上能收到，但是，我在打着电话，我无法做别的事情。"]],[3100,3100],[3173,3173]]],[1553780016924,["zyx@DESKTOP-60KJ218",[[1,3261,"如收发收短信"]],[3261,3261],[3267,3267]]],[1553780029134,["zyx@DESKTOP-60KJ218",[[1,3267,"对方不用保证此刻我一定在手机旁，同时，我也不用时刻留意手机有没有来短信。这样的话，我看着视频，然后来了短信，我就处理短信（也可以不处理），接着再看视频。"]],[3267,3267],[3343,3343]]],[1553780030533,["zyx@DESKTOP-60KJ218",[[1,3267,"，"]],[3267,3267],[3268,3268]]],[1553780034540,["zyx@DESKTOP-60KJ218",[[1,3345,"\n"]],[3344,3344],[3345,3345]]],[1553780035063,["zyx@DESKTOP-60KJ218",[[1,3346,"\n"]],[3345,3345],[3346,3346]]],[1553780038935,["zyx@DESKTOP-60KJ218",[[-1,3346,"\n"],[1,3347,"线程安全"]],[3346,3346],[3350,3350]]],[1553780040240,["zyx@DESKTOP-60KJ218",[[1,3350,"："]],[3350,3350],[3351,3351]]],[1553780043347,["zyx@DESKTOP-60KJ218",[[-1,3177,"，"]],[3178,3178],[3177,3177]]],[1553780044002,["zyx@DESKTOP-60KJ218",[[1,3177,"："]],[3177,3177],[3178,3178]]],[1553780046016,["zyx@DESKTOP-60KJ218",[[-1,3032,"，"]],[3033,3033],[3032,3032]]],[1553780046655,["zyx@DESKTOP-60KJ218",[[1,3032,"："]],[3032,3032],[3033,3033]]],[1553780117138,["zyx@DESKTOP-60KJ218",[[1,3351,"一个类或者程序所提供的接口对于线程来说是[原子操作](https://baike.baidu.com/item/%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C)或者多个线程之间的切换不会导致该接口的执行结果存在二义性,也就是说我们不用考虑同步的问题。\n\n线程安全问题大多是由[全局变量](https://baike.baidu.com/item/%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F)及[静态变量](https://baike.baidu.com/item/%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F)引起的，局部变量逃逸也可能导致线程安全问题。\n\n若每个线程中对全局变量、静态变量只有读操作，而无写操作，一般来说，这个全局变量是线程安全的；若有多个线程同时执行写操作，一般都需要考虑[线程同步](https://baike.baidu.com/item/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5)，否则的话就可能影响线程安全。"]],[3351,3351],[3827,3827]]],[1553780164077,["zyx@DESKTOP-60KJ218",[[1,3351,"多个线程访问同一个对象时，如果不用考虑这些线程在运行时环境下的调度和交替执行，也不需要进行额外的同步，或者在调用方进行任何其他操作，调用这个对象的行为都可以获得正确的结果，那么这个对象就是线程安全的。"]],[3351,3351],[3451,3451]]],[1553780172510,["zyx@DESKTOP-60KJ218",[[1,3927,"\n\n"]],[3927,3927],[3928,3928]]],[1553780173469,["zyx@DESKTOP-60KJ218",[[1,3929,"\n"]],[3928,3928],[3929,3929]]],[1553780183573,["zyx@DESKTOP-60KJ218",[[1,3929,"**Q11.什么是同步和异步？什么是线程安全？**"]],[3929,3929],[3954,3954]]],[1553780185508,["zyx@DESKTOP-60KJ218",[[-1,3933,"1"]],[3934,3934],[3933,3933]]],[1553780185657,["zyx@DESKTOP-60KJ218",[[1,3933,"2"]],[3933,3933],[3934,3934]]],[1553780364176,["zyx@DESKTOP-60KJ218",[[-1,3935,"什么是同步和异步？什么是线程安全"],[1,3951,"String str=\"i\"与 String str=new String(“i”)一样吗"]],[3935,3952],[3981,3981]]],[1553780365772,["zyx@DESKTOP-60KJ218",[[1,3984,"\n"]],[3983,3983],[3984,3984]]],[1553780366131,["zyx@DESKTOP-60KJ218",[[1,3985,"\n"]],[3984,3984],[3985,3985]]],[1553780397616,["zyx@DESKTOP-60KJ218",[[1,3985,"1.  String s = new String(“hello”)会创建2（1）个对象，String s = “hello”创建1（0）个对象。 \n    注：当字符串常量池中有对象hello时括号内成立！\n2.  字符串如果是变量相加，先开空间，在拼接。\n3.  字符串如果是常量相加，是先加，然后在常量池找，如果有就直接返回，否则，就创建。"]],[3985,3985],[4158,4158]]],[1553780400388,["zyx@DESKTOP-60KJ218",[[-1,3985,"1.  "]],[3988,3989],[3985,3985]]],[1553780405671,["zyx@DESKTOP-60KJ218",[[1,3993,"tr"],[-1,4054," "],[1,4055," "]],[3993,3993],[3995,3995]]],[1553780409496,["zyx@DESKTOP-60KJ218",[[1,4036,"tr"]],[4036,4036],[4038,4038]]],[1553780412250,["zyx@DESKTOP-60KJ218",[[-1,4010,"hello"],[1,4015,"i"]],[4010,4015],[4011,4011]]],[1553780414337,["zyx@DESKTOP-60KJ218",[[-1,4038,"hello"],[1,4043,"i"]],[4038,4043],[4039,4039]]],[1553780419030,["zyx@DESKTOP-60KJ218",[[-1,4052,"    "]],[4056,4056],[4052,4052]]],[1553780420621,["zyx@DESKTOP-60KJ218",[[-1,4078,"2.  "]],[4082,4082],[4078,4078]]],[1553780421844,["zyx@DESKTOP-60KJ218",[[-1,4099,"3.  "]],[4103,4103],[4099,4099]]],[1553780425573,["zyx@DESKTOP-60KJ218",[[1,4052,"=="],[1,4054,"=="]],[4052,4054],[4052,4058]]],[1553780439048,["zyx@DESKTOP-60KJ218",[[1,1673,"\\"]],[1673,1673],[1674,1674]]],[1553780442035,["zyx@DESKTOP-60KJ218",[[1,1654,"\\"]],[1654,1654],[1655,1655]]],[1553780443281,["zyx@DESKTOP-60KJ218",[[-1,1654,"\\"]],[1655,1655],[1654,1654]]],[1553780445189,["zyx@DESKTOP-60KJ218",[[-1,1673,"\\"]],[1674,1674],[1673,1673]]],[1553780447806,["zyx@DESKTOP-60KJ218",[[-1,1652,"=="]],[1654,1654],[1652,1652]]],[1553780451166,["zyx@DESKTOP-60KJ218",[[1,1652,"= ="]],[1652,1652],[1655,1655]]],[1553780453007,["zyx@DESKTOP-60KJ218",[[1,1675," "]],[1675,1675],[1676,1676]]],[1553780468197,["zyx@DESKTOP-60KJ218",[[-1,4057,"："]],[4058,4058],[4057,4057]]],[1553780473639,["zyx@DESKTOP-60KJ218",[[1,4059,":"]],[4059,4059],[4060,4060]]],[1553780491838,["zyx@DESKTOP-60KJ218",[[1,4145,"\n"]],[4144,4144],[4145,4145]]],[1553780492008,["zyx@DESKTOP-60KJ218",[[1,4145,"A==B 的判断为false;\n\n         (b)A.equals(B)为true"]],[4145,4145],[4190,4190]]],[1553780497756,["zyx@DESKTOP-60KJ218",[[-1,4162,"         (b)"]],[4174,4174],[4162,4162]]],[1553780498199,["zyx@DESKTOP-60KJ218",[[-1,4161,"\n"]],[4162,4162],[4161,4161]]],[1553780505647,["zyx@DESKTOP-60KJ218",[[1,3947,"1"]],[3947,3947],[3948,3948]]],[1553780507607,["zyx@DESKTOP-60KJ218",[[1,3964,"2"]],[3964,3964],[3965,3965]]],[1553780509062,["zyx@DESKTOP-60KJ218",[[1,3999,"1"]],[3999,3999],[4000,4000]]],[1553780510696,["zyx@DESKTOP-60KJ218",[[1,4039,"2"]],[4039,4039],[4040,4040]]],[1553780515021,["zyx@DESKTOP-60KJ218",[[-1,3999,"1"]],[4000,4000],[3999,3999]]],[1553780515205,["zyx@DESKTOP-60KJ218",[[1,3999,"2"]],[3999,3999],[4000,4000]]],[1553780518655,["zyx@DESKTOP-60KJ218",[[-1,4039,"2"]],[4040,4040],[4039,4039]]],[1553780518782,["zyx@DESKTOP-60KJ218",[[1,4039,"1"]],[4039,4039],[4040,4040]]],[1553780524862,["zyx@DESKTOP-60KJ218",[[-1,4152,"B"],[1,4153,"str2"]],[4152,4154],[4157,4157]]],[1553780527942,["zyx@DESKTOP-60KJ218",[[-1,4149,"A"],[1,4150,"str1 "]],[4149,4150],[4154,4154]]],[1553780529549,["zyx@DESKTOP-60KJ218",[[-1,4172,"A"],[1,4173,"str1 "]],[4172,4173],[4177,4177]]],[1553780534188,["zyx@DESKTOP-60KJ218",[[-1,4185,"B"],[1,4186,"str2 "]],[4185,4186],[4190,4190]]],[1553780541973,["zyx@DESKTOP-60KJ218",[[-1,4088,"字符串如果是变量相加，先开空间，在拼接。\n字符串如果是常量相加，是先加，然后在常量池找，如果有就直接返回，否则，就创建。"]],[4088,4148],[4088,4088]]],[1553780544103,["zyx@DESKTOP-60KJ218",[[-1,4088,"\n"]],[4088,4088],[4087,4087]]],[1553780546559,["zyx@DESKTOP-60KJ218",[[1,4136,"\n"]],[4135,4135],[4136,4136]]],[1553780546676,["zyx@DESKTOP-60KJ218",[[1,4137,"\n"]],[4136,4136],[4137,4137]]],[1553780546942,["zyx@DESKTOP-60KJ218",[[1,4137,"字符串如果是变量相加，先开空间，在拼接。\n字符串如果是常量相加，是先加，然后在常量池找，如果有就直接返回，否则，就创建。"]],[4137,4137],[4197,4197]]],[1553780548997,["zyx@DESKTOP-60KJ218",[[1,4198,"\n"]],[4197,4197],[4198,4198]]],[1553780549150,["zyx@DESKTOP-60KJ218",[[1,4199,"\n"]],[4198,4198],[4199,4199]]],[1553780559838,["zyx@DESKTOP-60KJ218",[[-1,4137,"字符串如果是变量相加，先开空间，在拼接。\n字符串如果是常量相加，是先加，然后在常量池找，如果有就直接返回，否则，就创建。"]],[4137,4197],[4137,4137]]],[1553780564543,["zyx@DESKTOP-60KJ218",[[1,2874,"\n"]],[2873,2873],[2874,2874]]],[1553780566044,["zyx@DESKTOP-60KJ218",[[1,2874,"字符串如果是变量相加，先开空间，在拼接。\n字符串如果是常量相加，是先加，然后在常量池找，如果有就直接返回，否则，就创建。"]],[2874,2874],[2934,2934]]],[1553780567220,["zyx@DESKTOP-60KJ218",[[1,2935,"\n"]],[2934,2934],[2935,2935]]],[1553780569808,["zyx@DESKTOP-60KJ218",[[-1,2873,"\n"]],[2874,2874],[2873,2873]]],[1553780573248,["zyx@DESKTOP-60KJ218",[[-1,2893,"\n"]],[2894,2894],[2893,2893]]],[1553780589922,["zyx@DESKTOP-60KJ218",[[-1,4196,"\n\n\n\n"]],[0,4200],[0,0]]],[1553780599166,["zyx@DESKTOP-60KJ218",[[1,4196,"\n"]],[4195,4195],[4196,4196]]],[1553780599892,["zyx@DESKTOP-60KJ218",[[1,4197,"\n"]],[4196,4196],[4197,4197]]],[1553780602006,["zyx@DESKTOP-60KJ218",[[-1,4197,"\n"],[1,4198,"Q"]],[4197,4197],[4198,4198]]],[1553780615670,["zyx@DESKTOP-60KJ218",[[1,4198,"13.如何将字符串反转？"]],[4198,4198],[4210,4210]]],[1553780617587,["zyx@DESKTOP-60KJ218",[[1,4197,"**"],[1,4210,"**"]],[4197,4210],[4197,4214]]],[1553780619957,["zyx@DESKTOP-60KJ218",[[1,4214,"\n\n"]],[4214,4214],[4215,4215]]],[1553780639772,["zyx@DESKTOP-60KJ218",[[1,4197,"\n"]],[4196,4196],[4197,4197]]],[1553780641791,["zyx@DESKTOP-60KJ218",[[1,4197,"String 类的常用方法都有那些？"]],[4197,4197],[4215,4215]]],[1553780647300,["zyx@DESKTOP-60KJ218",[[1,4197,"q13"]],[4197,4197],[4200,4200]]],[1553780648941,["zyx@DESKTOP-60KJ218",[[-1,4223,"3"],[1,4224,"4"]],[4223,4224],[4224,4224]]],[1553780651282,["zyx@DESKTOP-60KJ218",[[1,4197,"**"],[1,4218,"**"]],[4197,4218],[4197,4222]]],[1553780652854,["zyx@DESKTOP-60KJ218",[[1,4223,"\n"]],[4222,4222],[4223,4223]]],[1553780653988,["zyx@DESKTOP-60KJ218",[[1,4224,"\n"]],[4223,4223],[4224,4224]]],[1553780656155,["zyx@DESKTOP-60KJ218",[[-1,4199,"q"]],[4200,4200],[4199,4199]]],[1553780657269,["zyx@DESKTOP-60KJ218",[[1,4199,"Q"]],[4199,4199],[4200,4200]]],[1553780660509,["zyx@DESKTOP-60KJ218",[[1,4202,"."]],[4202,4202],[4203,4203]]],[1553780665494,["zyx@DESKTOP-60KJ218",[[1,4226,"\n"]],[4225,4225],[4226,4226]]],[1553780731608,["zyx@DESKTOP-60KJ218",[[1,4225,"1、求字符串长度\n**public int length()**//返回该字符串的长度"]],[4225,4225],[4268,4268]]],[1553780743117,["zyx@DESKTOP-60KJ218",[[1,4270,"\n"]],[4268,4268],[4269,4269]]],[1553780755669,["zyx@DESKTOP-60KJ218",[[1,4269,"2、求字符串某一位置字符\n**public char charAt(int index)**//返回字符串中指定位置的字符；注意字符串中第一个字符索引是0，最后一个是length()-1。"]],[4269,4269],[4363,4363]]],[1553780758805,["zyx@DESKTOP-60KJ218",[[1,4365,"\n"]],[4363,4363],[4364,4364]]],[1553780769186,["zyx@DESKTOP-60KJ218",[[1,4364,"3、提取子串\n用String类的substring方法可以提取字符串中的子串，该方法有两种常用参数:\n1)**public String substring(int beginIndex)**//该方法从beginIndex位置起，从当前字符串中取出剩余的字符作为一个新的字符串返回。\n2)**public String substring(int beginIndex, int endIndex)**//该方法从beginIndex位置起，从当前字符串中取出到endIndex-1位置的字符作为一个新的字符串返回。"]],[4364,4364],[4623,4623]]],[1553780771428,["zyx@DESKTOP-60KJ218",[[1,4625,"\n"]],[4623,4623],[4624,4624]]],[1553780780496,["zyx@DESKTOP-60KJ218",[[1,4624,"4、字符串比较\n1)**public int compareTo(String anotherString)**//该方法是对字符串内容按字典顺序进行大小比较，通过返回的整数值指明当前字符串与参数字符串的大小关系。若当前对象比参数大则返回正整数，反之返回负整数，相等返回0。\n2)**public int compareToIgnore(String anotherString)**//与compareTo方法相似，但忽略大小写。\n3)**public boolean equals(Object anotherObject)**//比较当前字符串和参数字符串，在两个字符串相等的时候返回true，否则返回false。\n4)**public boolean equalsIgnoreCase(String anotherString)**//与equals方法相似，但忽略大小写。"]],[4624,4624],[5015,5015]]],[1553780786919,["zyx@DESKTOP-60KJ218",[[1,5017,"\n"]],[5015,5015],[5016,5016]]],[1553780794232,["zyx@DESKTOP-60KJ218",[[1,5016,"5、字符串连接\n**public String concat(String str)**//将参数中的字符串str连接到当前字符串的后面，效果等价于\"+\"。"]],[5016,5016],[5094,5094]]],[1553780795445,["zyx@DESKTOP-60KJ218",[[1,5096,"\n"]],[5094,5094],[5095,5095]]],[1553780802192,["zyx@DESKTOP-60KJ218",[[1,5095,"6、字符串中单个字符查找\n1)**public int indexOf(int ch/String str)**//用于查找当前字符串中字符或子串，返回字符或子串在当前字符串中从左边起首次出现的位置，若没有出现则返回-1。\n2)**public int indexOf(int ch/String str, int fromIndex)**//改方法与第一种类似，区别在于该方法从fromIndex位置向后查找。\n3)**public int lastIndexOf(int ch/String str)**//该方法与第一种类似，区别在于该方法从字符串的末尾位置向前查找。\n4)**public int lastIndexOf(int ch/String str, int fromIndex)**//该方法与第二种方法类似，区别于该方法从fromIndex位置向前查找。"]],[5095,5095],[5482,5482]]],[1553780811461,["zyx@DESKTOP-60KJ218",[[1,5484,"\n"]],[5482,5482],[5483,5483]]],[1553780811671,["zyx@DESKTOP-60KJ218",[[1,5483,"7、字符串中字符的大小写转换\n1)**public String toLowerCase()**//返回将当前字符串中所有字符转换成小写后的新串\n2)**public String toUpperCase()**//返回将当前字符串中所有字符转换成大写后的新串"]],[5483,5483],[5613,5613]]],[1553780826701,["zyx@DESKTOP-60KJ218",[[1,5615,"\n"]],[5613,5613],[5614,5614]]],[1553780826896,["zyx@DESKTOP-60KJ218",[[1,5614,"8、字符串中字符的替换\n1)**public String replace(char oldChar, char newChar)**//用字符newChar替换当前字符串中所有的oldChar字符，并返回一个新的字符串。\n2)**public String replaceFirst(String regex, String replacement)**//该方法用字符replacement的内容替换当前字符串中遇到的第一个和字符串regex相匹配的子串，应将新的字符串返回。\n3)**public String replaceAll(String regex, String replacement)**//该方法用字符replacement的内容替换当前字符串中遇到的所有和字符串regex相匹配的子串，应将新的字符串返回。"]],[5614,5614],[5980,5980]]],[1553780828629,["zyx@DESKTOP-60KJ218",[[1,5982,"\n"]],[5980,5980],[5981,5981]]],[1553780835005,["zyx@DESKTOP-60KJ218",[[1,5981,"9、其他类方法\n1)**String trim()**//截去字符串两端的空格，但对于中间的空格不处理。"]],[5981,5981],[6033,6033]]],[1553780843517,["zyx@DESKTOP-60KJ218",[[1,6035,"\n"]],[6033,6033],[6034,6034]]],[1553780843680,["zyx@DESKTOP-60KJ218",[[1,6034,"2)**boolean statWith(String prefix)**或**boolean endWith(String suffix)**//用来比较当前字符串的起始字符或子字符串prefix和终止字符或子字符串suffix是否和当前字符串相同，重载方法中同时还可以指定比较的开始位置offset。"]],[6034,6034],[6186,6186]]],[1553780851791,["zyx@DESKTOP-60KJ218",[[1,6188,"\n"]],[6186,6186],[6187,6187]]],[1553780851959,["zyx@DESKTOP-60KJ218",[[1,6187,"3)**regionMatches(boolean b, int firstStart, String other, int otherStart, int length)**//从当前字符串的firstStart位置开始比较，取长度为length的一个子字符串，other字符串从otherStart位置开始，指定另外一个长度为length的字符串，两字符串比较，当b为true时字符串不区分大小写。\n4)**contains(String** **str)**//判断参数s是否被包含在字符串中，并返回一个布尔类型的值。"]],[6187,6187],[6449,6449]]],[1553780866390,["zyx@DESKTOP-60KJ218",[[1,6451,"\n"]],[6449,6449],[6450,6450]]],[1553780866731,["zyx@DESKTOP-60KJ218",[[1,6450,"1、字符串转换为基本类型\njava.lang包中有Byte、Short、Integer、Float、Double类的调用方法：\n1)**public static byte parseByte(String s)**\n2)**public static short parseShort(String s)**\n3)**public static short parseInt(String s)**\n4)**public static long parseLong(String s)**\n5)**public static float parseFloat(String s)**\n6)**public static double parseDouble(String s)**"]],[6450,6450],[6791,6791]]],[1553780875206,["zyx@DESKTOP-60KJ218",[[-1,6450,"1"]],[6451,6451],[6450,6450]]],[1553780876583,["zyx@DESKTOP-60KJ218",[[1,6450,"10"]],[6450,6450],[6452,6452]]],[1553780894405,["zyx@DESKTOP-60KJ218",[[1,6793,"2、基本类型转换为字符串类型\nString类中提供了String valueOf()放法，用作基本类型转换为字符串类型。\n1)**static String valueOf(char data[])**\n2)**static String valueOf(char data[], int offset, int count)**\n3)**static String valueOf(boolean b)**\n4)**static String valueOf(char c)**\n5)**static String valueOf(int i)**\n6)**static String valueOf(long l)**\n7)**static String valueOf(float f)**\n8)**static String valueOf(double d)**"]],[6793,6793],[7179,7179]]],[1553780896334,["zyx@DESKTOP-60KJ218",[[-1,6793,"2"]],[6794,6794],[6793,6793]]],[1553780896635,["zyx@DESKTOP-60KJ218",[[1,6793,"11"]],[6793,6793],[6795,6795]]],[1553780904701,["zyx@DESKTOP-60KJ218",[[1,7181,"\n"]],[7180,7180],[7181,7181]]],[1553780905189,["zyx@DESKTOP-60KJ218",[[1,7181,"3、进制转换\n使用Long类中的方法得到整数之间的各种进制转换的方法：\nLong.toBinaryString(long l)\nLong.toOctalString(long l)\nLong.toHexString(long l)\nLong.toString(long l, int p)//p作为任意进制"]],[7181,7181],[7334,7334]]],[1553780907771,["zyx@DESKTOP-60KJ218",[[1,7181,"12"]],[7181,7181],[7183,7183]]],[1553780908920,["zyx@DESKTOP-60KJ218",[[-1,7183,"3"]],[7184,7184],[7183,7183]]],[1553780923390,["zyx@DESKTOP-60KJ218",[[1,7336,"\n"]],[7335,7335],[7336,7336]]],[1553781108677,["zyx@DESKTOP-60KJ218",[[1,7356,"\n"]],[7355,7355],[7356,7356]]],[1553781118678,["zyx@DESKTOP-60KJ218",[[1,7356,"```java\nimport java.util.Scanner;\n/**\n * 使用Java中的StringBuffer完成字符串的翻转\n * @author xuanxuan\n *\n */\npublic class ReverseString {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t//如果使用next()方法读取字符串时，读到空格就会停止，而使用nextLine()方法会读取空格\n\t\tString s = in.nextLine();\n\t\tSystem.out.println(ReverseString(s));\n\t\tin.close();\n\t}\n\t\n\tpublic static String ReverseString(String str) {\n\t\tStringBuffer bu = new StringBuffer();\n\t\tbu.append(str);\n\t\tString str1 = bu.reverse().toString();\n\t\treturn str1;\n\t}\n}\n```\n"]],[7356,7356],[7877,7877]]],[1553781127439,["zyx@DESKTOP-60KJ218",[[1,7877,"\n"]],[7877,7877],[7878,7878]]],[1553781196278,["zyx@DESKTOP-60KJ218",[[1,18,"jichu"]],[18,18],[23,23]]],[1553781197450,["zyx@DESKTOP-60KJ218",[[-1,18,"jichu"]],[23,23],[18,18]]],[1553781202053,["zyx@DESKTOP-60KJ218",[[1,18,"超基础篇"]],[18,18],[22,22]]],[1553781203017,["zyx@DESKTOP-60KJ218",[[-1,21,"篇"]],[22,22],[21,21]]],[1553781204639,["zyx@DESKTOP-60KJ218",[[1,21,"部分"]],[21,21],[23,23]]],[1553781207223,["zyx@DESKTOP-60KJ218",[[-1,18,"超"]],[19,19],[18,18]]],[1553781217671,["zyx@DESKTOP-60KJ218",[[1,7881,"**Q14.如何将字符串反转？**"]],[7881,7881],[7898,7898]]],[1553781219927,["zyx@DESKTOP-60KJ218",[[-1,7885,"4"]],[7886,7886],[7885,7885]]],[1553781220056,["zyx@DESKTOP-60KJ218",[[1,7885,"5"]],[7885,7885],[7886,7886]]],[1553781238702,["zyx@DESKTOP-60KJ218",[[-1,7887,"如何将字符串反转"],[1,7895,"final 在 java 中有什么作用"]],[7887,7896],[7907,7907]]],[1553781241463,["zyx@DESKTOP-60KJ218",[[1,7910,"\n"]],[7909,7909],[7910,7910]]],[1553781254843,["zyx@DESKTOP-60KJ218",[[1,7910,"final 修饰的类叫最终类，该类不能被继承。\n\nfinal 修饰的方法不能被重写。\n\nfinal 修饰的变量叫常量，常量必须初始化，初始化之后值就不能被修改。\n\n使用 final 关键字修饰一个变量时，是指引用变量不能变，引用变量所指向的对象中的内容 还是可以改变的。"]],[7910,7910],[8045,8045]]],[1553781256589,["zyx@DESKTOP-60KJ218",[[-1,7934,"\n"]],[7934,7934],[7933,7933]]],[1553781257208,["zyx@DESKTOP-60KJ218",[[-1,7952,"\n"]],[7952,7952],[7951,7951]]],[1553781257943,["zyx@DESKTOP-60KJ218",[[-1,7989,"\n"]],[7989,7989],[7988,7988]]],[1553781261022,["zyx@DESKTOP-60KJ218",[[1,8043,"\n"]],[8042,8042],[8043,8043]]],[1553781261638,["zyx@DESKTOP-60KJ218",[[1,8044,"\n"]],[8043,8043],[8044,8044]]],[1553781264319,["zyx@DESKTOP-60KJ218",[[1,7910,"\n"]],[7909,7909],[7910,7910]]],[1553781265687,["zyx@DESKTOP-60KJ218",[[1,8046,"\n"]],[8044,8044],[8045,8045]]],[1553781289394,["zyx@DESKTOP-60KJ218",[[1,8046,"java 中的 Math.round(-1.5) 等于多少？"]],[8046,8046],[8076,8076]]],[1553781292971,["zyx@DESKTOP-60KJ218",[[1,8046,"Q16."]],[8046,8046],[8050,8050]]],[1553781297118,["zyx@DESKTOP-60KJ218",[[1,8046,"**"],[1,8080,"**"]],[8046,8080],[8046,8084]]],[1553781300158,["zyx@DESKTOP-60KJ218",[[1,8046,"\n"]],[8045,8045],[8046,8046]]],[1553781301192,["zyx@DESKTOP-60KJ218",[[-1,8046,"\n"]],[8046,8046],[8045,8045]]],[1553781302126,["zyx@DESKTOP-60KJ218",[[-1,8045,"\n"]],[8045,8045],[8044,8044]]],[1553781303823,["zyx@DESKTOP-60KJ218",[[1,8084,"\n"]],[8083,8083],[8084,8084]]],[1553781304856,["zyx@DESKTOP-60KJ218",[[1,8085,"\n"]],[8084,8084],[8085,8085]]],[1553781313782,["zyx@DESKTOP-60KJ218",[[1,8085,"Ceil向上取整，floor向下取整。Round先对一个树+0.5，然后向下取整"]],[8085,8085],[8125,8125]]],[1553781316550,["zyx@DESKTOP-60KJ218",[[1,8126,"\n"]],[8125,8125],[8126,8126]]],[1553781317415,["zyx@DESKTOP-60KJ218",[[1,8127,"\n"]],[8126,8126],[8127,8127]]],[1553781331269,["zyx@DESKTOP-60KJ218",[[1,8125,"。因此这个表达式的值为-1"]],[8125,8125],[8138,8138]]],[1553781333656,["zyx@DESKTOP-60KJ218",[[1,8141,"\n"]],[8138,8138],[8139,8139]]],[1553781334560,["zyx@DESKTOP-60KJ218",[[1,8142,"\n"]],[8139,8139],[8140,8140]]],[1553781380274,["zyx@DESKTOP-60KJ218",[[1,8140,"是否可以从一个 static 方法内部发出对非 static 方法的调用？"]],[8140,8140],[8177,8177]]],[1553781384436,["zyx@DESKTOP-60KJ218",[[1,8140,"Q17."]],[8140,8140],[8144,8144]]],[1553781386928,["zyx@DESKTOP-60KJ218",[[1,8140,"**"],[1,8181,"**"]],[8140,8181],[8140,8185]]],[1553781388999,["zyx@DESKTOP-60KJ218",[[1,8188,"\n"]],[8186,8186],[8187,8187]]],[1553781396247,["zyx@DESKTOP-60KJ218",[[1,8187,"不可以。因为非 static 方法是要与对象关联在一起的，必须创建一个对象后，才可以在该对 象上进行方法调用，而 static 方法调用时不需要创建对象，可以直接调用。也就是说，当一 个 static 方法被调用时，可能还没有创建任何实例对象，如果从一个 static 方法中发出对非 static 方法的调用，那个非 static 方法是关联到哪个对象上的呢？这个逻辑无法成立，所以， 一个 static 方法内部发出对非 static 方法的调用。/"]],[8187,8187],[8414,8414]]],[1553781396550,["zyx@DESKTOP-60KJ218",[[1,8416,"\n"]],[8414,8414],[8415,8415]]],[1553781397087,["zyx@DESKTOP-60KJ218",[[1,8417,"\n"]],[8415,8415],[8416,8416]]],[1553781399204,["zyx@DESKTOP-60KJ218",[[1,8416,"去8"]],[8416,8416],[8418,8418]]],[1553781400107,["zyx@DESKTOP-60KJ218",[[-1,8417,"8"]],[8418,8418],[8417,8417]]],[1553781426819,["zyx@DESKTOP-60KJ218",[[1,8416,"Q18.Overload 和 Override 的区别。Overloaded 的方法是否可以改变返回值的类型?"]],[8416,8416],[8471,8471]]],[1553781429231,["zyx@DESKTOP-60KJ218",[[1,8416,"**"],[1,8471,"**"]],[8416,8471],[8416,8475]]],[1553781431158,["zyx@DESKTOP-60KJ218",[[1,8477,"\n"]],[8475,8475],[8476,8476]]],[1553781431623,["zyx@DESKTOP-60KJ218",[[1,8478,"\n"]],[8476,8476],[8477,8477]]],[1553781442870,["zyx@DESKTOP-60KJ218",[[1,8477,"Overload是重载的意思，Override是覆盖的意思，也就是重写。\n\n重载 Overload表示同一个类中可以有多个名称相同的方法，但这些方法的参数列表各不相同（即参数个数或类型不同）。\n\n重写 Override 表示子类中的方法可以与父类中的某个方法的名称和参数完全相同，通过子类创建的实例对象调用这个方法时，将调用子类中的定义方法，这相当于把父类中定义的那个完全相同的方法给覆盖了，这也是面向对象编程的多态性的一种表现。\n\nl 子类覆盖父类的方法时，只能比父类抛出更少的异常，或者是抛出父类抛出的异常的子异常，因为子类可以解决父类的一些问题，不能比父类有更多的问题。\n\nl 子类方法的访问权限只能比父类的更大，不能更小。如果父类的方法是 private 类型，那么，子类则不存在覆盖的限制，相当于子类中增加了一个全新的方法。\n\n如果几个 Overloaded 的方法的参数列表不一样，它们的返回者类型当然也可以不一样。如果两个方法的参数列表完全一样，是否可以让它们的返回值不同来实现重载 Overload?\n\n这是不行的，我们可以用反证法来说明这个问题， 因为我们有时候调用一个方法时也可以不定义返回结果变量，即不要关心其返回结果，例如，我们调用 map.remove(key)方法时，虽然 remove 方法有返回值，但是我们通常都不会定义接收返回结果的变量，这时候假设该类中有两个名称和参数列表完全相同的方法，仅仅是返回类型不同,java 就无法确定编程者倒底是想调用哪个方法了，因为它无法通过返回结果类型来判断。 override 可以翻译为覆盖，从字面就可以知道，它是覆盖了一个方法并且对其重写，以求达到不同的作用。对我们来说最熟悉的覆盖就是对接口方法的实现，在接口中一般只是对方法 进行了声明，而我们在实现时，就需要实现接口声明的所有方法。除了这个典型的用法以外， 我们在继承中也可能会在子类覆盖父类中的方法。\n\n在覆盖要注意以下的几点：\n\n1、覆盖的方法的标志必须要和被覆盖的方法的标志完全匹配，才能达到覆盖的效果；\n\n2、覆盖的方法的返回值必须和被覆盖的方法的返回一致；\n\n3、覆盖的方法所抛出的异常必须和被覆盖方法的所抛出的异常一致，或者是其子类；\n\n4、被覆盖的方法不能为 private，否则在其子类中只是新定义了一个方法，并没有对其进行覆盖。\n\noverload 对我们来说可能比较熟悉，可以翻译为重载，它是指我们可以定义一些名称相同的方法，通过定义不同的输入参数来区分这些方法，然后再调用时，VM 就会根据不同的参数样式，来选择合适的方法执行。在使用重载要注意以下的几点：\n\n1、在使用重载时只能通过不同的参数样式。例如，不同的参数类型，不同的参数个数，不同的参数顺序（当然，同一方法内的几个参数类型必须不一样，例如可以是 fun(int,float)， 但是不能为 fun(int,int)）； 2、不能通过访问权限、返回类型、抛出的异常进行重载；\n\n3、方法的异常类型和数目不会对重载造成影响；\n\n4、对于继承来说，如果某一方法在父类中是访问权限是 priavte，那么就不能在子类对其进 行重载，如果定义的话，也只是定义了一个新方法，而不会达到重载的效果。"]],[8477,8477],[9825,9825]]],[1553781450239,["zyx@DESKTOP-60KJ218",[[-1,8694,"l "]],[8696,8696],[8694,8694]]],[1553781451390,["zyx@DESKTOP-60KJ218",[[-1,8765,"l "]],[8767,8767],[8765,8765]]],[1553781520594,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,9821,"\n"]],[8475,8475],[9821,9821]]],[1553781520594,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,9821,"\n"]],[9821,9821],[8475,8475]]],[1553781462423,["zyx@DESKTOP-60KJ218",[[1,9823,"\n"]],[9822,9822],[9823,9823]]],[1553781484838,["zyx@DESKTOP-60KJ218",[[1,9823,"**Q18.Overload 和 Override 的区别。Overloaded 的方法是否可以改变返回值的类型?**"]],[9823,9823],[9882,9882]]],[1553781486912,["zyx@DESKTOP-60KJ218",[[-1,9827,"8"]],[9828,9828],[9827,9827]]],[1553781487152,["zyx@DESKTOP-60KJ218",[[1,9827,"9"]],[9827,9827],[9828,9828]]],[1553781501708,["zyx@DESKTOP-60KJ218",[[-1,9829,"Overload 和 O"],[1,9841,"构造器 Constructor 是否可被 o"],[-1,9848," 的区别。Overloaded 的方法是否可以改变返回值的类型"],[1,9879,"?"]],[9829,9879],[9859,9859]]],[1553781503904,["zyx@DESKTOP-60KJ218",[[-1,9859,"?"]],[9859,9859],[9858,9858]]],[1553781504631,["zyx@DESKTOP-60KJ218",[[1,9862,"\n"]],[9861,9861],[9862,9862]]],[1553781505406,["zyx@DESKTOP-60KJ218",[[1,9863,"\n"]],[9862,9862],[9863,9863]]],[1553781511139,["zyx@DESKTOP-60KJ218",[[1,9863,"构造器 Constructor 不能被继承，因此不能重写 Override，但可以被重载 Overload。"]],[9863,9863],[9917,9917]]],[1553781512053,["zyx@DESKTOP-60KJ218",[[1,9918,"\n"]],[9917,9917],[9918,9918]]],[1553781512791,["zyx@DESKTOP-60KJ218",[[1,9919,"\n"]],[9918,9918],[9919,9919]]],[1553781515545,["zyx@DESKTOP-60KJ218",[[1,9919,"**Q19.构造器 Constructor 是否可被 override?**"]],[9919,9919],[9957,9957]]],[1553781517361,["zyx@DESKTOP-60KJ218",[[-1,9922,"19"],[1,9924,"2"]],[9922,9924],[9923,9923]]],[1553781517886,["zyx@DESKTOP-60KJ218",[[1,9923,"0"]],[9923,9923],[9924,9924]]],[1553781580630,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,9958,"\n"]],[8475,8475],[9958,9958]]],[1553781580631,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,9958,"\n"]],[9958,9958],[8475,8475]]],[1553781536421,["zyx@DESKTOP-60KJ218",[[-1,9925,"构造器 Constructor 是否可被 override?"],[1,9955,"接口是否可继承接口?抽象类是否可实现(implements)接口?抽象类是否可 继承具体类(concrete class)?抽象类中是否可以有静态的 main 方法？"]],[9925,9955],[10008,10008]]],[1553781538438,["zyx@DESKTOP-60KJ218",[[1,10011,"\n"]],[10010,10010],[10011,10011]]],[1553781539764,["zyx@DESKTOP-60KJ218",[[1,10012,"\n"]],[10011,10011],[10012,10012]]],[1553781574948,["zyx@DESKTOP-60KJ218",[[1,10012,"接口可以继承接口。抽象类可以实现(implements)接口，抽象类可以继承具体类。抽象类中 可以有静态的 main 方法。"]],[10012,10012],[10074,10074]]],[1553781640660,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,10075,"\n"]],[8475,8475],[10075,10075]]],[1553781640660,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,10075,"\n"]],[10075,10075],[8475,8475]]],[1553781581157,["zyx@DESKTOP-60KJ218",[[1,10074,"只有记住抽象类与普通类的唯一区别：就是不能创建实例对象和允许有 abstract 方法。"]],[10074,10074],[10118,10118]]],[1553781586126,["zyx@DESKTOP-60KJ218",[[-1,10074,"只有记住"]],[10078,10078],[10074,10074]]],[1553781587919,["zyx@DESKTOP-60KJ218",[[1,10115,"\n"]],[10114,10114],[10115,10115]]],[1553781588353,["zyx@DESKTOP-60KJ218",[[1,10116,"\n"]],[10115,10115],[10116,10116]]],[1553781614357,["zyx@DESKTOP-60KJ218",[[1,10116,"java 中实现多态的机制是什么？"]],[10116,10116],[10133,10133]]],[1553781617658,["zyx@DESKTOP-60KJ218",[[1,10116,"Q21."]],[10116,10116],[10120,10120]]],[1553781621906,["zyx@DESKTOP-60KJ218",[[1,10116,"**"],[1,10137,"**"]],[10116,10137],[10116,10141]]],[1553781622983,["zyx@DESKTOP-60KJ218",[[1,10142,"\n"]],[10141,10141],[10142,10142]]],[1553781628852,["zyx@DESKTOP-60KJ218",[[1,10142,"靠的是父类或接口定义的引用变量可以指向子类或具体实现类的实例对象，而程序调用的方 法在运行期才动态绑定，就是引用变量所指向的具体实例对象的方法，也就是内存里正在运 行的那个对象的方法，而不是引用变量的类型中定义的方法。"]],[10142,10142],[10251,10251]]],[1553781630254,["zyx@DESKTOP-60KJ218",[[1,10252,"\n"]],[10251,10251],[10252,10252]]],[1553781630416,["zyx@DESKTOP-60KJ218",[[1,10253,"\n"]],[10252,10252],[10253,10253]]],[1553781633974,["zyx@DESKTOP-60KJ218",[[1,10253,"**Q21.java 中实现多态的机制是什么？**"]],[10253,10253],[10278,10278]]],[1553781636292,["zyx@DESKTOP-60KJ218",[[-1,10257,"1"],[1,10258,"2"]],[10257,10258],[10258,10258]]],[1553781638398,["zyx@DESKTOP-60KJ218",[[1,10279,"\n"]],[10278,10278],[10279,10279]]],[1553781639135,["zyx@DESKTOP-60KJ218",[[1,10280,"\n"]],[10279,10279],[10280,10280]]],[1553781640502,["zyx@DESKTOP-60KJ218",[[1,10142,"\n"]],[10141,10141],[10142,10142]]],[1553781700669,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,10279,"\n"]],[8475,8475],[10279,10279]]],[1553781700669,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,10279,"\n"]],[10279,10279],[8475,8475]]],[1553781641710,["zyx@DESKTOP-60KJ218",[[1,10282,"\n"]],[10280,10280],[10281,10281]]],[1553782120681,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,10279,"\n"]],[8475,8475],[10279,10279]]],[1553782120681,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,10279,"\n"]],[10279,10279],[8475,8475]]],[1553782093736,["zyx@DESKTOP-60KJ218",[[-1,10260,"j"]],[10261,10261],[10260,10260]]],[1553782094111,["zyx@DESKTOP-60KJ218",[[1,10260,"J"]],[10260,10260],[10261,10261]]],[1553782098822,["zyx@DESKTOP-60KJ218",[[-1,10122,"j"]],[10123,10123],[10122,10122]]],[1553782099239,["zyx@DESKTOP-60KJ218",[[1,10122,"J"]],[10122,10122],[10123,10123]]],[1553782104783,["zyx@DESKTOP-60KJ218",[[1,10283,"\n"]],[10280,10280],[10281,10281]]],[1553782180663,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,10279,"\n"]],[8475,8475],[10279,10279]]],[1553782180663,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,10279,"\n"]],[10279,10279],[8475,8475]]],[1553782145263,["zyx@DESKTOP-60KJ218",[[1,9919,"\n"]],[9917,9917],[9918,9918]]],[1553782145856,["zyx@DESKTOP-60KJ218",[[1,9920,"\n"]],[9918,9918],[9919,9919]]],[1553782147016,["zyx@DESKTOP-60KJ218",[[1,9919,"abstract class 和 interface 有什么区别?"]],[9919,9919],[9952,9952]]],[1553782155779,["zyx@DESKTOP-60KJ218",[[1,9919,"Q20."]],[9919,9919],[9923,9923]]],[1553782158687,["zyx@DESKTOP-60KJ218",[[1,9919,"**"],[1,9956,"**"]],[9919,9956],[9919,9960]]],[1553782161662,["zyx@DESKTOP-60KJ218",[[-1,9966,"0"]],[9967,9967],[9966,9966]]],[1553782161762,["zyx@DESKTOP-60KJ218",[[1,9966,"1"]],[9966,9966],[9967,9967]]],[1553782164826,["zyx@DESKTOP-60KJ218",[[-1,10163,"1"]],[10164,10164],[10163,10163]]],[1553782164973,["zyx@DESKTOP-60KJ218",[[1,10163,"2"]],[10163,10163],[10164,10164]]],[1553782167127,["zyx@DESKTOP-60KJ218",[[1,9962,"\n"]],[9960,9960],[9961,9961]]],[1553782167487,["zyx@DESKTOP-60KJ218",[[1,9963,"\n"]],[9961,9961],[9962,9962]]],[1553782179148,["zyx@DESKTOP-60KJ218",[[1,9962,"Abstract：\n\nl 含有 abstract 修饰符的 class 即为抽象类，abstract 类不能创建的实例对象。\n\nl 含有 abstract 方法的类必须定义为abstract class，abstract class类中的方法不必是抽象的。abstract class类中定义抽象方法必须在具体(Concrete)子类中实现，所以，不能有抽象构造方法或抽象静态方法。\n\nl 如果的子类没有实现抽象父类中的所有抽象方法，那么子类也必须定义为 abstract 类型。\n\n接口（interface）可以说成是抽象类的一种特例，接口中的所有方法都必须是抽象的。\n\n接口中的方法定义默认为 public abstract 类型，接口中的成员变量类型默认为public static final。\n\n两者区别：\n\n抽象类可以有构造方法，接口中不能有构造方法。 2.抽象类中可以有普通成员变量，接口中没有普通成员变量 3.抽象类中可以包含非抽象的普通方法，接口中的所有方法必须都是抽象的，不能有非抽象 的普通方法。 4\\. 抽象类中的抽象方法的访问类型可以是 public，protected 和（默认类型,虽然 eclipse 下不报错，但应该也不行），但接口中的抽象方法只能是 public 类型的，并且默认即 为 public abstract 类型。 5\\. 抽象类中可以包含静态方法，接口中不能包含静态方法 6\\. 抽象类和接口中都可以包含静态成员变量，抽象类中的静态成员变量的访问类型可以任 意，但接口中定义的变量只能是 public static final 类型，并且默认即为 public static final 类 型。 7\\. 一个类可以实现多个接口，但只能继承一个抽象类。"]],[9962,9962],[10713,10713]]],[1553782240685,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,11075,"\n"]],[8475,8475],[11075,11075]]],[1553782240685,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,11075,"\n"]],[11075,11075],[8475,8475]]],[1553782181968,["zyx@DESKTOP-60KJ218",[[-1,9973,"l "]],[9975,9975],[9973,9973]]],[1553782182679,["zyx@DESKTOP-60KJ218",[[-1,10024,"l "]],[10026,10026],[10024,10024]]],[1553782183894,["zyx@DESKTOP-60KJ218",[[-1,10151,"l "]],[10153,10153],[10151,10151]]],[1553782191705,["zyx@DESKTOP-60KJ218",[[1,9973,"* "],[1,10023,"* "],[1,10024,"* "],[1,10150,"* "],[1,10151,"* "]],[9973,10196],[9975,10206]]],[1553782195833,["zyx@DESKTOP-60KJ218",[[-1,10156,"* "]],[10158,10158],[10156,10156]]],[1553782196441,["zyx@DESKTOP-60KJ218",[[-1,10156,"\n"]],[10156,10156],[10155,10155]]],[1553782197392,["zyx@DESKTOP-60KJ218",[[-1,10025,"* "]],[10027,10027],[10025,10025]]],[1553782197960,["zyx@DESKTOP-60KJ218",[[-1,10025,"\n"]],[10025,10025],[10024,10024]]],[1553782200982,["zyx@DESKTOP-60KJ218",[[-1,9972,"\n"]],[9972,9972],[9971,9971]]],[1553782205426,["zyx@DESKTOP-60KJ218",[[-1,10245,"\n"]],[10245,10245],[10244,10244]]],[1553782207435,["zyx@DESKTOP-60KJ218",[[-1,10317,"\n"]],[10317,10317],[10316,10316]]],[1553782213542,["zyx@DESKTOP-60KJ218",[[1,10317,"1."]],[10317,10317],[10319,10319]]],[1553782214951,["zyx@DESKTOP-60KJ218",[[1,10342,"\n"]],[10342,10342],[10343,10343]]],[1553782216680,["zyx@DESKTOP-60KJ218",[[1,10371,"\n"]],[10371,10371],[10372,10372]]],[1553782218664,["zyx@DESKTOP-60KJ218",[[1,10420,"\n"]],[10420,10420],[10421,10421]]],[1553782220985,["zyx@DESKTOP-60KJ218",[[-1,10423,"\\"]],[10424,10424],[10423,10423]]],[1553782222079,["zyx@DESKTOP-60KJ218",[[-1,10421," "]],[10422,10422],[10421,10421]]],[1553782224375,["zyx@DESKTOP-60KJ218",[[-1,10422,". "]],[10424,10424],[10422,10422]]],[1553782226336,["zyx@DESKTOP-60KJ218",[[1,10422,"."]],[10422,10422],[10423,10423]]],[1553782229279,["zyx@DESKTOP-60KJ218",[[1,10541,"\n"]],[10541,10541],[10542,10542]]],[1553782231848,["zyx@DESKTOP-60KJ218",[[-1,10543,"\\."]],[10544,10545],[10543,10543]]],[1553782232799,["zyx@DESKTOP-60KJ218",[[1,10543,"."]],[10543,10543],[10544,10544]]],[1553782235512,["zyx@DESKTOP-60KJ218",[[-1,10544," "]],[10545,10545],[10544,10544]]],[1553782238959,["zyx@DESKTOP-60KJ218",[[-1,10570,"\\"]],[10570,10571],[10570,10570]]],[1553782239775,["zyx@DESKTOP-60KJ218",[[-1,10571," "]],[10572,10572],[10571,10571]]],[1553782300670,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,11069,"\n"]],[8475,8475],[11069,11069]]],[1553782300670,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,11069,"\n"]],[11069,11069],[8475,8475]]],[1553782240936,["zyx@DESKTOP-60KJ218",[[1,10569,"\n"]],[10569,10569],[10570,10570]]],[1553782243687,["zyx@DESKTOP-60KJ218",[[-1,10680," "]],[10681,10681],[10680,10680]]],[1553782244368,["zyx@DESKTOP-60KJ218",[[1,10680,"\n"]],[10680,10680],[10681,10681]]],[1553782246247,["zyx@DESKTOP-60KJ218",[[-1,10682,"\\. "]],[10685,10685],[10682,10682]]],[1553782247218,["zyx@DESKTOP-60KJ218",[[1,10682,"."]],[10682,10682],[10683,10683]]],[1553782300078,["zyx@DESKTOP-60KJ218",[[-1,11049,"Java 中实现多态的机制是什么"],[1,11065,"说出一些常用的类，包，接口，请各举 5 个"]],[11049,11065],[11070,11070]]],[1553782360672,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,11073,"\n"]],[8475,8475],[11073,11073]]],[1553782360672,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,11073,"\n"]],[11073,11073],[8475,8475]]],[1553782302913,["zyx@DESKTOP-60KJ218",[[1,11078,"\n"]],[11074,11074],[11075,11075]]],[1553782310786,["zyx@DESKTOP-60KJ218",[[1,11075,"常用的类：BufferedReader BufferedWriter FileReader FileWirter String Integer java.util.Date，System，Class，List,HashMap\n\n常用的包：java.lang java.io java.util java.sql,javax.servlet,org.hibernate\n\n常用的接口：Remote List Map Document NodeList,Servlet,HttpServletRequest,HttpServletResponse,Transaction(Hibernate)、 Session(Hibernate),HttpSession"]],[11075,11075],[11401,11401]]],[1553782313722,["zyx@DESKTOP-60KJ218",[[-1,11290," "]],[11291,11291],[11290,11290]]],[1553782316092,["zyx@DESKTOP-60KJ218",[[1,11290," "]],[11290,11290],[11291,11291]]],[1553782319562,["zyx@DESKTOP-60KJ218",[[-1,11259,"\n"]],[11259,11259],[11258,11258]]],[1553782320467,["zyx@DESKTOP-60KJ218",[[-1,11188,"\n"]],[11188,11188],[11187,11187]]],[1553782322161,["zyx@DESKTOP-60KJ218",[[1,11403,"\n"]],[11400,11400],[11401,11401]]],[1553782325625,["zyx@DESKTOP-60KJ218",[[1,11401,"**Q22.说出一些常用的类，包，接口，请各举 5 个？**"]],[11401,11401],[11431,11431]]],[1553782327361,["zyx@DESKTOP-60KJ218",[[-1,11405,"2"]],[11406,11406],[11405,11405]]],[1553782327523,["zyx@DESKTOP-60KJ218",[[1,11405,"2"]],[11405,11405],[11406,11406]]],[1553782328929,["zyx@DESKTOP-60KJ218",[[-1,11405,"2"]],[11406,11406],[11405,11405]]],[1553782329095,["zyx@DESKTOP-60KJ218",[[1,11405,"3"]],[11405,11405],[11406,11406]]],[1553782420695,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,11431,"\n"]],[8475,8475],[11431,11431]]],[1553782420695,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,11431,"\n"]],[11431,11431],[8475,8475]]],[1553782361287,["zyx@DESKTOP-60KJ218",[[-1,11401,"**Q23.说出一些常用的类，包，接口，请各举 5 个？**"]],[11401,11431],[11401,11401]]],[1553782361935,["zyx@DESKTOP-60KJ218",[[-1,11403,"\n"]],[11401,11401],[11400,11400]]],[1553782373160,["zyx@DESKTOP-60KJ218",[[1,11401,"### Q&S基础部分"]],[11401,11401],[11412,11412]]],[1553782375334,["zyx@DESKTOP-60KJ218",[[-1,11408,"基础"]],[11410,11410],[11408,11408]]],[1553782376351,["zyx@DESKTOP-60KJ218",[[1,11408,"JIHE"]],[11408,11408],[11412,11412]]],[1553782378296,["zyx@DESKTOP-60KJ218",[[-1,11408,"JIHE"]],[11412,11412],[11408,11408]]],[1553782379722,["zyx@DESKTOP-60KJ218",[[1,11408,"集合"]],[11408,11408],[11410,11410]]],[1553782381217,["zyx@DESKTOP-60KJ218",[[1,11414,"\n"]],[11412,11412],[11413,11413]]],[1553782381416,["zyx@DESKTOP-60KJ218",[[1,11415,"\n"]],[11413,11413],[11414,11414]]],[1553782381946,["zyx@DESKTOP-60KJ218",[[1,11414,"### Q&S基础部分"]],[11414,11414],[11425,11425]]],[1553782384115,["zyx@DESKTOP-60KJ218",[[-1,11421,"基础"]],[11423,11423],[11421,11421]]],[1553782385772,["zyx@DESKTOP-60KJ218",[[1,11421,"线程"]],[11421,11421],[11423,11423]]],[1553782387007,["zyx@DESKTOP-60KJ218",[[1,11427,"\n"]],[11425,11425],[11426,11426]]],[1553782387223,["zyx@DESKTOP-60KJ218",[[1,11428,"\n"]],[11426,11426],[11427,11427]]],[1553782387976,["zyx@DESKTOP-60KJ218",[[1,11427,"### Q&S基础部分"]],[11427,11427],[11438,11438]]],[1553782403810,["zyx@DESKTOP-60KJ218",[[-1,11434,"基础"]],[11436,11436],[11434,11434]]],[1553782407019,["zyx@DESKTOP-60KJ218",[[1,11434,"反射"]],[11434,11434],[11436,11436]]],[1553782408128,["zyx@DESKTOP-60KJ218",[[1,11440,"\n"]],[11438,11438],[11439,11439]]],[1553782408392,["zyx@DESKTOP-60KJ218",[[1,11441,"\n"]],[11439,11439],[11440,11440]]],[1553782408978,["zyx@DESKTOP-60KJ218",[[1,11440,"### Q&S基础部分"]],[11440,11440],[11451,11451]]],[1553782410430,["zyx@DESKTOP-60KJ218",[[-1,11447,"基础"]],[11449,11449],[11447,11447]]],[1553782412488,["zyx@DESKTOP-60KJ218",[[1,11447,"异常"]],[11447,11447],[11449,11449]]],[1553782413504,["zyx@DESKTOP-60KJ218",[[1,11453,"\n"]],[11451,11451],[11452,11452]]],[1553782413640,["zyx@DESKTOP-60KJ218",[[1,11454,"\n"]],[11452,11452],[11453,11453]]],[1553782417612,["zyx@DESKTOP-60KJ218",[[1,11453,"****"]],[11453,11453],[11455,11455]]],[1553782417709,["zyx@DESKTOP-60KJ218",[[1,11455,"### Q&S基础部分"]],[11455,11455],[11466,11466]]],[1553782418964,["zyx@DESKTOP-60KJ218",[[-1,11455,"### Q&S基础部分"]],[11466,11466],[11455,11455]]],[1553782420275,["zyx@DESKTOP-60KJ218",[[-1,11453,"****"]],[11455,11455],[11453,11453]]],[1553782431718,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,11451,"\n"]],[8475,8475],[11451,11451]]],[1553782431718,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,11451,"\n"]],[11451,11451],[8475,8475]]],[1553782420856,["zyx@DESKTOP-60KJ218",[[1,11453,"### Q&S基础部分"]],[11453,11453],[11464,11464]]],[1553782422903,["zyx@DESKTOP-60KJ218",[[-1,11460,"基础"]],[11462,11462],[11460,11460]]],[1553782426809,["zyx@DESKTOP-60KJ218",[[1,11460,"对象拷贝"]],[11460,11460],[11464,11464]]],[1553782491715,[null,[[-1,8475,"去"],[1,8476,"\n"],[-1,11466,"\n"]],[8475,8475],[11466,11466]]],[1553782491715,[null,[[1,8475,"去"],[-1,8475,"\n"],[1,11466,"\n"]],[11466,11466],[8475,8475]]],[1553782433143,["zyx@DESKTOP-60KJ218",[[1,11,"\n"]],[9,9],[10,10]]],[1553782434939,["zyx@DESKTOP-60KJ218",[[1,11,"* * *\n"]],[10,10],[18,18]]],[1553782438334,["zyx@DESKTOP-60KJ218",[[-1,11,"* * *\n"]],[18,18],[10,10]]],[1553782441969,["zyx@DESKTOP-60KJ218",[[-1,11,"\n"]],[11,11],[10,10]]],[1553782443819,["zyx@DESKTOP-60KJ218",[[1,11,"@toc\n\n"]],[10,10],[17,17]]],[1553782474333,["zyx@DESKTOP-60KJ218",[[1,30,"##### "]],[30,30],[36,36]]],[1553782478921,["zyx@DESKTOP-60KJ218",[[-1,11,"@toc"]],[15,15],[11,11]]],[1553782480451,["zyx@DESKTOP-60KJ218",[[-1,12,"\n"]],[11,11],[10,10]]],[1553782487163,["zyx@DESKTOP-60KJ218",[[1,30,"#"]],[30,30],[31,31]]],[1553782551718,[null,[[-1,8483,"去"],[1,8484,"\n"],[-1,11474,"\n"]],[8483,8483],[11474,11474]]],[1553782551718,[null,[[1,8483,"去"],[-1,8483,"\n"],[1,11474,"\n"]],[11474,11474],[8483,8483]]],[1553782493659,["zyx@DESKTOP-60KJ218",[[1,237,"###### "]],[237,237],[244,244]]],[1553782496501,["zyx@DESKTOP-60KJ218",[[1,647,"###### "]],[647,647],[654,654]]],[1553782499057,["zyx@DESKTOP-60KJ218",[[1,1050,"###### "]],[1050,1050],[1057,1057]]],[1553782501225,["zyx@DESKTOP-60KJ218",[[1,1157,"###### "]],[1157,1157],[1164,1164]]],[1553782503341,["zyx@DESKTOP-60KJ218",[[1,1325,"###### "]],[1325,1325],[1332,1332]]],[1553782504675,["zyx@DESKTOP-60KJ218",[[1,1495,"###### "]],[1495,1495],[1502,1502]]],[1553782507554,["zyx@DESKTOP-60KJ218",[[1,1743,"###### "]],[1743,1743],[1750,1750]]],[1553782513336,["zyx@DESKTOP-60KJ218",[[1,2490,"###### "]],[2490,2490],[2497,2497]]],[1553782514992,["zyx@DESKTOP-60KJ218",[[1,2695,"###### "]],[2695,2695],[2702,2702]]],[1553782517123,["zyx@DESKTOP-60KJ218",[[1,3140,"###### "]],[3140,3140],[3147,3147]]],[1553782519858,["zyx@DESKTOP-60KJ218",[[1,4073,"###### "]],[4073,4073],[4080,4080]]],[1553782521859,["zyx@DESKTOP-60KJ218",[[1,4286,"###### "]],[4286,4286],[4293,4293]]],[1553782525481,["zyx@DESKTOP-60KJ218",[[1,7433,"###### "]],[7433,7433],[7440,7440]]],[1553782528068,["zyx@DESKTOP-60KJ218",[[1,7980,"###### "]],[7980,7980],[7987,7987]]],[1553782529556,["zyx@DESKTOP-60KJ218",[[1,8151,"###### "]],[8151,8151],[8158,8158]]],[1553782531070,["zyx@DESKTOP-60KJ218",[[1,8253,"###### "]],[8253,8253],[8260,8260]]],[1553782532876,["zyx@DESKTOP-60KJ218",[[1,8536,"###### "]],[8536,8536],[8543,8543]]],[1553782535970,["zyx@DESKTOP-60KJ218",[[1,9950,"###### "]],[9950,9950],[9957,9957]]],[1553782537372,["zyx@DESKTOP-60KJ218",[[1,10053,"###### "]],[10053,10053],[10060,10060]]],[1553782540007,["zyx@DESKTOP-60KJ218",[[1,10849,"###### "]],[10849,10849],[10856,10856]]],[1553782541310,["zyx@DESKTOP-60KJ218",[[1,11053,"###### "]],[11053,11053],[11060,11060]]],[1553782542559,["zyx@DESKTOP-60KJ218",[[1,11198,"###### "]],[11198,11198],[11205,11205]]],[1553782611722,[null,[[-1,8602,"去"],[1,8603,"\n"],[-1,11628,"\n"]],[8602,8602],[11628,11628]]],[1553782611722,[null,[[1,8602,"去"],[-1,8602,"\n"],[1,11628,"\n"]],[11628,11628],[8602,8602]]],[1553782552425,["zyx@DESKTOP-60KJ218",[[-1,11,"\n"]],[10,10],[9,9]]],[1553782554933,["zyx@DESKTOP-60KJ218",[[1,11,"@toc\n\n"]],[10,10],[17,17]]],[1553782560277,["zyx@DESKTOP-60KJ218",[[-1,35,"#"]],[36,36],[35,35]]],[1553782563624,["zyx@DESKTOP-60KJ218",[[-1,246,"#"]],[247,247],[246,246]]],[1553782584399,["zyx@DESKTOP-60KJ218",[[-1,30,"##### "]],[30,35],[30,30]]],[1553782586280,["zyx@DESKTOP-60KJ218",[[-1,235,"##### "]],[235,241],[235,235]]],[1553782591345,["zyx@DESKTOP-60KJ218",[[-1,638,"###### "]],[638,644],[638,638]]],[1553782597234,["zyx@DESKTOP-60KJ218",[[-1,1727,"###### "]],[1727,1734],[1727,1727]]],[1553782599881,["zyx@DESKTOP-60KJ218",[[-1,2474,"**Q9.== 和 equals 的区别是什么？**\n"]],[2474,2501],[2474,2474]]],[1553782601235,["zyx@DESKTOP-60KJ218",[[1,2474,"**Q9.== 和 equals 的区别是什么？**\n"]],[2474,2474],[2474,2501]]],[1553782603080,["zyx@DESKTOP-60KJ218",[[-1,2467,"###### "]],[2467,2474],[2467,2467]]],[1553782605831,["zyx@DESKTOP-60KJ218",[[-1,2665,"###### "]],[2665,2672],[2665,2665]]],[1553782609336,["zyx@DESKTOP-60KJ218",[[-1,3103,"###### "]],[3103,3109],[3103,3103]]],[1553782646029,[null,[[-1,8558,"去"],[1,8559,"\n"],[-1,11584,"\n"]],[8558,8558],[11584,11584]]],[1553782646029,[null,[[1,8558,"去"],[-1,8558,"\n"],[1,11584,"\n"]],[11584,11584],[8558,8558]]],[1553782612440,["zyx@DESKTOP-60KJ218",[[-1,4029,"###### "]],[4029,4036],[4029,4029]]],[1553782614749,["zyx@DESKTOP-60KJ218",[[-1,4235,"###### "]],[4235,4242],[4235,4235]]],[1553782619588,["zyx@DESKTOP-60KJ218",[[-1,7375,"###### "]],[7375,7382],[7375,7375]]],[1553782622280,["zyx@DESKTOP-60KJ218",[[-1,7915,"###### "]],[7915,7922],[7915,7915]]],[1553782624793,["zyx@DESKTOP-60KJ218",[[-1,8181,"###### "]],[8181,8188],[8181,8181]]],[1553782628948,["zyx@DESKTOP-60KJ218",[[-1,8079,"###### "]],[8079,8085],[8079,8079]]],[1553782631944,["zyx@DESKTOP-60KJ218",[[-1,8450,"###### "]],[8450,8457],[8450,8450]]],[1553782635864,["zyx@DESKTOP-60KJ218",[[-1,9857,"###### "]],[9857,9864],[9857,9857]]],[1553782637281,["zyx@DESKTOP-60KJ218",[[-1,9953,"###### "]],[9953,9960],[9953,9953]]],[1553782639624,["zyx@DESKTOP-60KJ218",[[-1,10742,"###### "]],[10742,10749],[10742,10742]]],[1553782641499,["zyx@DESKTOP-60KJ218",[[-1,10939,"###### "]],[10939,10946],[10939,10939]]],[1553782642767,["zyx@DESKTOP-60KJ218",[[-1,11077,"###### "]],[11077,11084],[11077,11077]]]],null,"zyx@DESKTOP-60KJ218"]]}